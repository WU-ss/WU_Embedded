C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE ..\User\main.c LARGE OBJECTADVANCED OPTIMIZE(8,SIZE) BROWSE INCDIR(..\FWLi
                    -b\SC95F_Lib\inc;..\User;..\Bank1;..\Bank2;..\Bank3) DEFINE(SC95F8x3x) DEBUG PRINT(..\List\main.lst) OBJECT(..\Output\mai
                    -n.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c)  
   3          //      FileName          : main.c
   4          //      Function          : Main Function
   5          //  Instructions  : Contains the MCU initialization function and its H file
   6          //************************************************************
   7          /********************Includes************************************************************************/
   8          #include "SC_Init.h"    // MCU initialization header file, including all firmware library header files
   9          #include "SC_it.h"
  10          #include "..\Drivers\SCDriver_list.h"
  11          #include "HeadFiles\SysFunVarDefine.h"
  12          #include "..\Bank1\Delay.h"
  13          #include "..\Bank1\Lcd_Driver.h"
  14          #include "..\Bank1\GUI.h"
  15          #include "..\Bank3\music.h"
  16          #include "..\Bank2\Key.h"
  17          #include "..\Bank2\data.h"
  18          #include "..\Bank2\run.h"
  19          #include "..\Bank2\run2.h"
  20          #include "..\Bank2\basic_draw.h"
  21          #include "..\Bank2\draw.h"
  22          #include "..\Bank3\esp8266.h"
  23          #include "..\Bank3\data2.h"
  24          #include "stdio.h"
  25          extern struct MUSIC_T music_t;
  26          void draw_menu(void);
  27          void init_Game1(void);
  28          void init_interface_info(void);
  29          void draw_all_through_struct(void);
  30          void run_games(void);
  31          void games_reset(void);
  32          void init_interface2_info(void);
  33          void draw_all2(void);
  34          void init_Game2(void);
  35          void run_games2(void);
  36          void games_reset2(void);
  37          struct Interface2
  38          {
  39              //生命值
  40              int8_t my_life;
  41              int8_t his_life;
  42              //我的飞机
  43              int8_t my_plane[2];
  44              int8_t my_buttles[10][2];
  45              //对方飞机
  46              int8_t his_plane[2];
  47              int8_t his_buttles[10][2];
  48          }volatile interfacetwo;
  49          extern char year;
  50          extern char month;
  51          extern char day;
  52          extern char hour;
  53          extern char minute;
C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 2   

  54          extern char second;
  55          extern char set_hour;
  56          extern char set_minute;
  57          extern char set_second;
  58          extern char set_numbuf[6];
  59          extern char clock_mode;
  60          u16 CLK_POINT_COLOR=0x001f;
  61          u16 CLK_POINT_COLOR_DEF=0x0000;
  62          void judge_clock(void)
  63          {
  64   1              if(set_hour==hour && set_minute==minute && set_second==second)
  65   1              {
  66   2                      Lcd_Clear(0xFFFF);
  67   2                      Gui_DrawFont_GBK24(20,50,GRAY1,BACK_COLOR,"TIME OUT!!!");
  68   2                      Delay_ms(5000);
  69   2                      Lcd_Clear(BACK_COLOR);
  70   2              }
  71   1      }
  72          /*
  73          0       时钟模式
  74          1       单人游戏
  75          2       双人游戏
  76          */
  77          uint8_t Mode=0;
  78          /*
  79          0       不开始
  80          1       开始
  81          */
  82          uint8_t Start=0;
  83          /**************************************Generated by EasyCodeCube*************************************/
  84          
  85          /*************************************.Generated by EasyCodeCube.************************************/
  86          /*****************************************************************************************************
  87          * Function Name: main
  88          * Description  : This function implements main function.
  89          * Arguments    : None
  90          * Return Value : None
  91          ******************************************************************************************************/
  92          void main(void)
  93          {
  94   1          /*<Generated by EasyCodeCube begin>*/
  95   1          /*<UserCodeStart>*//*<SinOne-Tag><3>*/
  96   1          SC_Init(); /*** MCU init***/
  97   1          PWM_CmdEX(PWM0_Type,DISABLE);
  98   1          SCD_Joystick_Init();
  99   1          Lcd_Init();
 100   1          Lcd_Clear(BACK_COLOR);
 101   1          Gui_DrawFont_GBK24(10,50,RED,BACK_COLOR,"CLOCK INIT"); 
 102   1          //    ESP8266_Cmd_Init();           //esp8266初始化
 103   1          //    ESP_get_data();                       //世界时间获取
 104   1          //    Parse_BJ_Time();              //转成年月日，时分秒格式
 105   1          Clock_start_draw();
 106   1          Lcd_Clear(BACK_COLOR);
 107   1          /*<UserCodeEnd>*//*<SinOne-Tag><3>*/
 108   1          /*<UserCodeStart>*//*<SinOne-Tag><4>*/
 109   1          /*****MainLoop*****/
 110   1          while(1)
 111   1          {
 112   2              /*<UserCodeStart>*//*<SinOne-Tag><5>*/
 113   2              /*****User program*****/
 114   2              draw_menu();                    //绘制开始页面
 115   2              while(Mode==0&&Start==1)
C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 3   

 116   2              {
 117   3                  Lcd_Clear(BACK_COLOR);
 118   3                  Gui_DrawFont_GBK24(0,80,GRAY1,BACK_COLOR,"Press start");
 119   3                  Gui_DrawFont_GBK24(20,100,GRAY1,BACK_COLOR," to set clock");
 120   3                  while(Start==1)
 121   3                  {
 122   4                                      judge_clock();
 123   4                      clock_mode=0;
 124   4                      Clock_run();
 125   4                      if(KEY_Scan(1)==KEY_Start_PRES)
 126   4                      {
 127   5                          Lcd_Clear(BACK_COLOR);
 128   5                          set_hour=hour;
 129   5                          set_minute=minute;
 130   5                          set_second=second;
 131   5                          while(Start==1)
 132   5                          {
 133   6                              if(KEY_Scan(1)==KEY_Select_PRES) Start=0;
 134   6                              if(KEY_Scan(1)==KEY_X_PRES) clock_mode=(clock_mode+2)%3;
 135   6                              if(KEY_Scan(1)==KEY_B_PRES) clock_mode=(clock_mode+1)%3;
 136   6                              if((KEY_Scan(1)==KEY_Y_PRES) && (clock_mode==0))        set_hour++;
 137   6                              if(KEY_Scan(1)==KEY_Y_PRES && clock_mode==1)    set_minute++;
 138   6                              if(KEY_Scan(1)==KEY_Y_PRES && clock_mode==2)    set_second++;
 139   6                              if(KEY_Scan(1)==KEY_A_PRES && clock_mode==0) set_hour--;
 140   6                              if(KEY_Scan(1)==KEY_A_PRES && clock_mode==1) set_minute--;
 141   6                              if(KEY_Scan(1)==KEY_A_PRES && clock_mode==2) set_second--;
 142   6                                                      if(set_second>=60)
 143   6                                                      {
 144   7                                                              set_second=0;
 145   7                                                              set_minute++;
 146   7                                                      }
 147   6                                                      if(set_minute>=60)
 148   6                                                      {
 149   7                                                              set_minute=0;
 150   7                                                              set_hour++;
 151   7                                                      }
 152   6                                                      if(set_hour>=24)
 153   6                                                      {
 154   7                                                              set_hour=0;
 155   7                                                      }
 156   6                                                      if(clock_mode==0)
 157   6                                                      {
 158   7                                                              if(set_second>=10)
 159   7                                                              {
 160   8                                                                      sprintf(set_numbuf,"%d",(int)set_second);
 161   8                                                                      Gui_DrawFont_GBK24(50,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 162   8                                                              }
 163   7                                                              else 
 164   7                                                              {
 165   8                                                                      Gui_DrawFont_GBK24(50,20,POINT_COLOR,BACK_COLOR,"0");
 166   8                                                                      sprintf(set_numbuf,"%d",(int)set_second);
 167   8                                                                      Gui_DrawFont_GBK24(58,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 168   8                                                              }
 169   7                                                              sprintf(set_numbuf,"%d:",(int)set_hour);
 170   7                                                              Gui_DrawFont_GBK24(0,20,CLK_POINT_COLOR,BACK_COLOR,set_numbuf);
 171   7                                                              sprintf(set_numbuf,"%d:",(int)set_minute);
 172   7                                                              Gui_DrawFont_GBK24(25,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 173   7                                                      }
 174   6                                                      if(clock_mode==1)
 175   6                                                      {
 176   7                                                              if(set_second>=10)
 177   7                                                              {
C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 4   

 178   8                                                                      sprintf(set_numbuf,"%d",(int)set_second);
 179   8                                                                      Gui_DrawFont_GBK24(50,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 180   8                                                              }
 181   7                                                              else 
 182   7                                                              {
 183   8                                                                      Gui_DrawFont_GBK24(50,20,POINT_COLOR,BACK_COLOR,"0");
 184   8                                                                      sprintf(set_numbuf,"%d",(int)set_second);
 185   8                                                                      Gui_DrawFont_GBK24(58,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 186   8                                                              }
 187   7                                                              sprintf(set_numbuf,"%d:",(int)set_hour);
 188   7                                                              Gui_DrawFont_GBK24(0,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 189   7                                                              sprintf(set_numbuf,"%d:",(int)set_minute);
 190   7                                                              Gui_DrawFont_GBK24(25,20,CLK_POINT_COLOR,BACK_COLOR,set_numbuf);
 191   7                                                      }
 192   6                                                      if(clock_mode==2)
 193   6                                                      {
 194   7                                                              if(set_second>=10)
 195   7                                                              {
 196   8                                                                      sprintf(set_numbuf,"%d",(int)set_second);
 197   8                                                                      Gui_DrawFont_GBK24(50,20,CLK_POINT_COLOR,BACK_COLOR,set_numbuf);
 198   8                                                              }
 199   7                                                              else 
 200   7                                                              {
 201   8                                                                      Gui_DrawFont_GBK24(50,20,CLK_POINT_COLOR,BACK_COLOR,"0");
 202   8                                                                      sprintf(set_numbuf,"%d",(int)set_second);
 203   8                                                                      Gui_DrawFont_GBK24(58,20,CLK_POINT_COLOR,BACK_COLOR,set_numbuf);
 204   8                                                              }
 205   7                                                              sprintf(set_numbuf,"%d:",(int)set_hour);
 206   7                                                              Gui_DrawFont_GBK24(0,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 207   7                                                              sprintf(set_numbuf,"%d:",(int)set_minute);
 208   7                                                              Gui_DrawFont_GBK24(25,20,POINT_COLOR,BACK_COLOR,set_numbuf);
 209   7                                                      }
 210   6                          }
 211   5                      }
 212   4                      if(KEY_Scan(1)==KEY_Select_PRES) Start=0; //判断是否返回主菜单
 213   4                  }
 214   3              }
 215   2              while(Mode==1&&Start==1)
 216   2              {
 217   3                  PWM_CmdEX(PWM0_Type,ENABLE);
 218   3                  music_set(1);
 219   3                  init_Game1();
 220   3                  run_games();
 221   3                  games_reset();
 222   3              }
 223   2              while(Mode==2&&Start==1)
 224   2              {
 225   3                  PWM_CmdEX(PWM0_Type,ENABLE);
 226   3                  music_set(1);
 227   3                  init_Game2();
 228   3                  run_games2();
 229   3                  games_reset2();
 230   3              }
 231   2              /*<UserCodeEnd>*//*<SinOne-Tag><5>*/
 232   2              /*<Begin-Inserted by EasyCodeCube for Condition>*/
 233   2              /*<UserCodeEnd>*//*<SinOne-Tag><4>*/
 234   2              /*<Generated by EasyCodeCube end>*/
 235   2          }
 236   1      }
 237          void draw_menu(void)
 238          {
 239   1          PWM_CmdEX(PWM0_Type,DISABLE);
C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 5   

 240   1          POINT_COLOR=BLACK;          //设置字体颜色为黑色
 241   1          BACK_COLOR=GRAY2;           //设置背景颜色为灰色
 242   1          Lcd_Clear(BACK_COLOR);  //将背景颜色置为灰色
 243   1          while(!Start)
 244   1          {
 245   2                      judge_clock();
 246   2              if(KEY_Scan(1)==KEY_Start_PRES) Start=1;
 247   2              if(KEY_Scan(1)==KEY_Select_PRES) Mode++;
 248   2              Mode%=3;
 249   2              Gui_DrawFont_GBK24(5,10,RED,BACK_COLOR,"Menu");
 250   2              Gui_DrawFont_GBK24(10,45,GRAY1,BACK_COLOR,"Clock       ");
 251   2              Gui_DrawFont_GBK24(10,61,GRAY1,BACK_COLOR,"Game for one");
 252   2              Gui_DrawFont_GBK24(10,77,GRAY1,BACK_COLOR,"Game for two");
 253   2              if(Mode==0)
 254   2              {
 255   3                  Gui_DrawFont_GBK24(10,45,GRAY1,BLUE,"Clock       ");
 256   3              }
 257   2              else if(Mode==1)
 258   2              {
 259   3                  Gui_DrawFont_GBK24(10,61,GRAY1,BLUE,"Game for one");
 260   3              }
 261   2              else if(Mode==2)
 262   2              {
 263   3                  Gui_DrawFont_GBK24(10,77,GRAY1,BLUE,"Game for two");
 264   3              }
 265   2          }
 266   1      }
 267          void init_Game1(void)
 268          {
 269   1          Lcd_Clear(BACK_COLOR);  //将背景颜色置为灰色
 270   1          //初始界面初始化
 271   1          draw_start_page(); 
 272   1          KEYStart_to_skip();
 273   1          Lcd_Clear(BACK_COLOR);
 274   1          //游玩界面数据初始化
 275   1          init_interface_info();
 276   1          //游玩上眉初始化
 277   1          init_play_interface();
 278   1          //游戏主要元素初始化
 279   1          draw_all_through_struct();
 280   1      }
 281          void draw_all_through_struct(void){
 282   1          draw_play_all(interface.score,interface.life,interface.my_plane,interface.my_buttles,interface.boss,in
             -terface.enemy_planes, interface.enemy_buttles);
 283   1      }
 284          void init_interface_info(void){
 285   1          int i=0;
 286   1          //初始化得分
 287   1          interface.score = 0;
 288   1          interface.score_2 = 0;
 289   1          interface.score_3 = 0;
 290   1          //初始化生命次数
 291   1          interface.life = 3;
 292   1          interface.my_plane[0] = 64; interface.my_plane[1] = 113;
 293   1          for(i=0; i<my_buttle_max; i++){
 294   2              interface.my_buttles[i][0] = 0;
 295   2              interface.my_buttles[i][1] = 0;
 296   2          }
 297   1          interface.level = 1; //游戏难度
 298   1          interface.boss[0] = 0;
 299   1          interface.boss[1] = 0;
 300   1          interface.boss_life = 1; //boss血量
C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 6   

 301   1          interface.pace = 2;
 302   1          interface.come_boss = 1;    
 303   1          for(i=0; i<enemy_plane_max; i++){
 304   2              interface.enemy_planes[i][0] = 0;
 305   2              interface.enemy_planes[i][1] = 0;
 306   2          }
 307   1          for(i=0; i<enemy_buttle_max; i++){
 308   2              interface.enemy_buttles[i][0] = 0;
 309   2              interface.enemy_buttles[i][1] = 0;
 310   2          }
 311   1      }
 312          void run_games(void)
 313          {       
 314   1          while(1)
 315   1          {
 316   2                      judge_clock();
 317   2              if(interface.life == 0 || interface.boss_life == 0){break;}
 318   2              if(interface.score >= 3 && interface.come_boss == 1)
 319   2              {
 320   3                  interface.boss[0] = 50;
 321   3                  interface.boss[1] = 45;
 322   3                  interface.come_boss = 0;
 323   3                  clear_all_enemy_plane(interface.my_plane,interface.enemy_planes, interface.my_buttles, interfa
             -ce.enemy_buttles);
 324   3              }
 325   2              if(interface.score % 10 == 0)
 326   2              {
 327   3                  interface.level = interface.score/10 + 1;
 328   3                  if(interface.level > 3)
 329   3                  {
 330   4                      interface.level = 3;
 331   4                  }
 332   3              }
 333   2              switch_my_act(interface.my_plane,interface.my_buttles);
 334   2              update_my_buttles(interface.my_buttles);
 335   2              if(interface.boss[0] == 0){
 336   3                  update_enemy_planes(interface.enemy_planes, interface.level);
 337   3                  update_enemy_buttles(interface.enemy_buttles, interface.level);
 338   3                  generate_enemy_planes(interface.level,interface.enemy_planes);
 339   3                  generate_enemy_buttles(interface.level, interface.enemy_planes, interface.enemy_buttles);
 340   3                  check_my_plane_to_enemy_plane_collide(&(interface.score),&(interface.life), interface.my_plane
             -,interface.enemy_planes);
 341   3                  check_my_plane_to_enemy_buttles_collide(&(interface.life),  interface.enemy_buttles, interface.
             -my_plane);
 342   3                  check_my_buttles_to_enemy_plane_collide(&(interface.score), interface.my_buttles, interface.en
             -emy_planes);
 343   3              }
 344   2              else{
 345   3                  update_enemy_buttles(interface.enemy_buttles, 1);
 346   3                  move_boss(interface.boss, &(interface.pace));
 347   3                  generate_boss_buttles(interface.boss, interface.enemy_buttles);
 348   3                  check_my_plane_to_enemy_buttles_collide(&(interface.life),  interface.enemy_buttles, interface.
             -my_plane);
 349   3                  check_my_buttles_to_boss_collide(&(interface.score), &(interface.boss_life),interface.my_buttl
             -es, interface.boss);
 350   3              }
 351   2              draw_all_through_struct();       
 352   2              Delay_ms(20);
 353   2          }
 354   1      }
 355          void games_reset(void)
 356          {
C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 7   

 357   1          draw_end(&(interface.score),&(interface.score_2),&(interface.score_3));
 358   1          Start=0;
 359   1          while(Mode==1&&Start==0)
 360   1          {
 361   2                      judge_clock();
 362   2              if(KEY_Scan(1)==KEY_Start_PRES) Start=1;
 363   2              if(KEY_Scan(1)==KEY_Select_PRES) Mode=0;
 364   2          }
 365   1      }
 366          void init_Game2(void)
 367          {
 368   1          Lcd_Clear(BACK_COLOR);  //将背景颜色置为灰色
 369   1          //初始界面初始化
 370   1          Gui_DrawFont_GBK24(30,20,GRAY0,BACK_COLOR,"SPACE WAR");
 371   1          Gui_DrawFont_GBK24(72,40,GRAY0,BACK_COLOR,"PVP");
 372   1          Gui_DrawFont_GBK24(20,70,GRAY1,BACK_COLOR,"Press Key");
 373   1          DisplayButtonUp(98,70,120,86); 
 374   1          KEYStart_to_skip();
 375   1          Lcd_Clear(BACK_COLOR);
 376   1          //游玩界面数据初始化
 377   1          init_interface2_info();
 378   1          //绘制全部
 379   1          draw_all2();
 380   1          UART0_SendData8(KEY_Start);
 381   1      }
 382          void run_games2(void)
 383          {
 384   1          while(rev_key!=KEY_Start)   judge_clock();;
 385   1          init_interface2_info();
 386   1          while(1)
 387   1          {
 388   2                      judge_clock();
 389   2              if(interfacetwo.my_life==0 | interfacetwo.his_life==0)  break;
 390   2              if(check_my_buttles_to_his_plane_collide(interfacetwo.my_buttles,interfacetwo.his_plane)==1)    (inte
             -rfacetwo.his_life)--;
 391   2              if(check_his_buttles_to_my_plane_collide(interfacetwo.his_buttles,interfacetwo.my_plane)==1)    (inte
             -rfacetwo.my_life)--;
 392   2              switch_both_act(interfacetwo.my_plane,interfacetwo.my_buttles,interfacetwo.his_plane,interfacetwo.
             -his_buttles);
 393   2              update_both_buttles(interfacetwo.my_buttles,interfacetwo.his_buttles);
 394   2              draw_all2();
 395   2              Delay_ms(100);
 396   2          }
 397   1      }
 398          void init_interface2_info(void)
 399          {
 400   1          int i=0;
 401   1          //初始化生命次数
 402   1          interfacetwo.my_life = 3;
 403   1          interfacetwo.his_life = 3;
 404   1          //初始化我机
 405   1          interfacetwo.my_plane[0] = 64;      
 406   1          interfacetwo.my_plane[1] = 113;
 407   1          //初始化敌机
 408   1          interfacetwo.his_plane[0] = 64;
 409   1          interfacetwo.his_plane[1] = 15;
 410   1          //初始化子弹
 411   1          for(i=0; i<10; i++){
 412   2              interfacetwo.my_buttles[i][0] = 0;
 413   2              interfacetwo.my_buttles[i][1] = 0;
 414   2              interfacetwo.his_buttles[i][0] = 0;
 415   2              interfacetwo.his_buttles[i][1] = 0;
C51 COMPILER V9.54   MAIN                                                                  04/19/2023 15:54:50 PAGE 8   

 416   2          }
 417   1      }
 418          void draw_all2(void)
 419          {
 420   1          draw_my_plane(interfacetwo.my_plane[0],interfacetwo.my_plane[1]);
 421   1          draw_his_plane(interfacetwo.his_plane[0],interfacetwo.his_plane[1]);
 422   1          draw_both_buttles(interfacetwo.my_buttles,interfacetwo.his_buttles);
 423   1      }
 424          void games_reset2(void)
 425          {
 426   1          Start=0;
 427   1          while(Mode==1&&Start==0)
 428   1          {
 429   2              if(KEY_Scan(1)==KEY_Start_PRES) Start=1;
 430   2              if(KEY_Scan(1)==KEY_Select_PRES) Mode=0;
 431   2          }
 432   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3809    ----
   CONSTANT SIZE    =    126    ----
   XDATA SIZE       =    164    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
