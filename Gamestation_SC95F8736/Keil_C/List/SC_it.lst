C51 COMPILER V9.54   SC_IT                                                                 04/19/2023 15:54:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SC_IT
OBJECT MODULE PLACED IN ..\Output\SC_it.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE ..\User\SC_it.c LARGE OBJECTADVANCED OPTIMIZE(8,SIZE) BROWSE INCDIR(..\FWL
                    -ib\SC95F_Lib\inc;..\User;..\Bank1;..\Bank2;..\Bank3) DEFINE(SC95F8x3x) DEBUG PRINT(..\List\SC_it.lst) OBJECT(..\Output\S
                    -C_it.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c)   
   3          //      FileName          : SC_it.c
   4          //      Function          : Interrupt Service Routine
   5          //  Instructions  :  
   6          //  Date          : 2022/03/03
   7          //      Version           : V1.0002
   8          //*************************************************************
   9          /********************Includes************************************************************************/
  10          #include "SC_it.h"
  11          #include "..\Drivers\SCDriver_list.h"
  12          #include "HeadFiles\SC_itExtern.h"
  13          #include "sc95f_uart0.h"
  14          #include "Delay.h"
  15          #include "beep.h"
  16          int16_t ms_cnt = 0;
  17          uint8_t delay_begin = 0;
  18          uint8_t UART2_Rx;
  19          unsigned char i;//指针，用于判断接收字符串
  20          bit ESP8266_UartReceFlag;
  21          bit ESP8266_UartSendFlag;
  22          uint8_t rev_key=0;
  23          char Recbuff[10];
  24          unsigned char i=0;   //指针，用于判断接收字符串
  25          char abuf;
  26          char count=0;
  27          char year;
  28          char month;
  29          char day;
  30          char hour;
  31          char minute;
  32          char second;
  33          /**************************************Generated by EasyCodeCube*************************************/
  34          
  35          /*************************************.Generated by EasyCodeCube.************************************/
  36          void INT0Interrupt()            interrupt 0                             
  37          {
  38   1          TCON &= 0XFD;//Clear interrupt flag bit
  39   1          /*INT0_it write here begin*/
  40   1          /*INT0_it write here*/
  41   1          /*<Generated by EasyCodeCube begin>*/
  42   1          /*<Generated by EasyCodeCube end>*/
  43   1          /*INT0Interrupt Flag Clear begin*/
  44   1          /*INT0Interrupt Flag Clear end*/
  45   1      }
  46          void Timer0Interrupt()          interrupt 1                        
  47          {
  48   1          /*TIM0_it write here begin*/
  49   1          TIM0_Mode1SetReloadCounter(33536);
  50   1          /*TIM0_it write here*/
  51   1          /*<Generated by EasyCodeCube begin>*/
  52   1          /*<UserCodeStart>*//*<SinOne-Tag><6>*/
  53   1          //Timer0Interrupt
C51 COMPILER V9.54   SC_IT                                                                 04/19/2023 15:54:50 PAGE 2   

  54   1          {
  55   2              /*<UserCodeStart>*//*<SinOne-Tag><7>*/
  56   2              /*****User program*****/
  57   2              my_buzzer_play();
  58   2              /*<UserCodeEnd>*//*<SinOne-Tag><7>*/
  59   2              /*<Begin-Inserted by EasyCodeCube for Condition>*/
  60   2          }
  61   1          /*<UserCodeEnd>*//*<SinOne-Tag><6>*/
  62   1          /*<Generated by EasyCodeCube end>*/
  63   1          /*Timer0Interrupt Flag Clear begin*/
  64   1          /*Timer0Interrupt Flag Clear end*/          
  65   1      }
  66          void INT1Interrupt()            interrupt 2             
  67          {
  68   1          TCON &= 0XF7;//Clear interrupt flag bit
  69   1          /*INT1_it write here begin*/
  70   1          /*INT1_it write here*/
  71   1          /*<Generated by EasyCodeCube begin>*/
  72   1          /*<Generated by EasyCodeCube end>*/
  73   1          /*INT1Interrupt Flag Clear begin*/
  74   1          /*INT1Interrupt Flag Clear end*/                                    
  75   1      }
  76          void Timer1Interrupt()          interrupt 3             
  77          {
  78   1          /*TIM1_it write here begin*/
  79   1          /*TIM1_it write here*/
  80   1          /*<Generated by EasyCodeCube begin>*/
  81   1          /*<Generated by EasyCodeCube end>*/
  82   1          /*Timer1Interrupt Flag Clear begin*/
  83   1          /*Timer1Interrupt Flag Clear end*/          
  84   1      }
  85          #if defined (SC92F742x) || defined (SC92F7490)
              void SSI0Interrupt()            interrupt 4             
              {
                  /*SSI0_it write here begin*/
                  /*SSI0_it write here*/
                  /*<Generated by EasyCodeCube begin>*/
                  /*<Generated by EasyCodeCube end>*/
                  /*SSI0Interrupt Flag Clear begin*/
                  /*SSI0Interrupt Flag Clear end*/            
              }
              #else
  96          void UART0Interrupt()           interrupt 4             
  97          {
  98   1          /*UART0_it write here begin*/
  99   1          /*UART0_it write here*/
 100   1          if(UART0_GetFlagStatus(UART0_FLAG_RI)==SET)
 101   1          {
 102   2              rev_key=UART0_ReceiveData8();
 103   2          }
 104   1          /*<Generated by EasyCodeCube begin>*/
 105   1          /*<Generated by EasyCodeCube end>*/
 106   1          /*UART0Interrupt Flag Clear begin*/
 107   1          UART0_ClearFlag(UART0_FLAG_TI);
 108   1          UART0_ClearFlag(UART0_FLAG_RI);
 109   1          /*UART0Interrupt Flag Clear end*/           
 110   1      }
 111          #endif
 112          void Timer2Interrupt()          interrupt 5             
 113          {
 114   1          /*TIM2_it write here begin*/
 115   1          /*TIM2_it write here*/
C51 COMPILER V9.54   SC_IT                                                                 04/19/2023 15:54:50 PAGE 3   

 116   1          if (delay_begin == 1)
 117   1          {
 118   2              if (ms_cnt > 0)
 119   2              {
 120   3                  ms_cnt --;
 121   3              }
 122   2              else
 123   2              {
 124   3                  delay_begin = 0;
 125   3              }
 126   2          }
 127   1          /*<Generated by EasyCodeCube begin>*/
 128   1          /*<Generated by EasyCodeCube end>*/
 129   1          /*Timer2Interrupt Flag Clear begin*/
 130   1          TIM2_ClearFlag(TIM2_FLAG_TF2);
 131   1          TIM2_ClearFlag(TIM2_FLAG_EXF2);
 132   1          /*Timer2Interrupt Flag Clear end*/          
 133   1      }
 134          void ADCInterrupt()                     interrupt 6             
 135          {
 136   1          /*ADC_it write here begin*/
 137   1          /*ADC_it write here*/
 138   1          /*<Generated by EasyCodeCube begin>*/
 139   1          /*<Generated by EasyCodeCube end>*/
 140   1          /*ADCInterrupt Flag Clear begin*/
 141   1          /*ADCInterrupt Flag Clear end*/             
 142   1      }
 143          #if defined (SC92F854x) || defined (SC92F754x) ||defined  (SC92F844xB) || defined (SC92F744xB)||defined  (
             -SC92F84Ax_2) || defined (SC92F74Ax_2)|| defined (SC92F846xB) \
 144          || defined (SC92F746xB) || defined (SC92F836xB) || defined (SC92F736xB) || defined (SC92F8003)||defined  (
             -SC92F84Ax) || defined (SC92F74Ax) || defined  (SC92F83Ax) \
 145          || defined (SC92F73Ax) || defined (SC92F7003) || defined (SC92F740x) || defined (SC92FWxx) || defined (SC9
             -3F743x) || defined (SC93F833x) || defined (SC93F843x)\
 146          || defined (SC92F848x) || defined (SC92F748x)|| defined (SC92F859x) || defined (SC92F759x)
              void SSIInterrupt()                     interrupt 7             
              {
                  /*SSI_it write here begin*/
                  /*SSI_it write here*/
                  /*<Generated by EasyCodeCube begin>*/
                  /*<Generated by EasyCodeCube end>*/
                  /*SSIInterrupt Flag Clear begin*/
                  /*SSIInterrupt Flag Clear end*/             
              }
              #elif defined (SC92F742x) || defined (SC92F7490)
              void SSI1Interrupt()            interrupt 7             
              {
                  /*SSI1_it write here begin*/
                  /*SSI1_it write here*/
                  /*<Generated by EasyCodeCube begin>*/
                  /*<Generated by EasyCodeCube end>*/
                  /*SSI1Interrupt Flag Clear begin*/
                  /*SSI1Interrupt Flag Clear end*/            
              }
              #else 
 167          void USCI0Interrupt()                   interrupt 7             
 168          {
 169   1          /*USCI0_it write here begin*/
 170   1          /*USCI0_it write here*/
 171   1          /*<Generated by EasyCodeCube begin>*/
 172   1          /*<Generated by EasyCodeCube end>*/
 173   1          /*USCI0Interrupt Flag Clear begin*/
 174   1          USCI0_ClearFlag(USCI0_SPI_FLAG_SPIF);
C51 COMPILER V9.54   SC_IT                                                                 04/19/2023 15:54:50 PAGE 4   

 175   1          /*USCI0Interrupt Flag Clear end*/           
 176   1      }
 177          #endif
 178          void PWMInterrupt()                     interrupt 8
 179          {
 180   1          /*PWM_it write here begin*/
 181   1          /*PWM_it write here*/
 182   1          /*<Generated by EasyCodeCube begin>*/
 183   1          /*<Generated by EasyCodeCube end>*/
 184   1          /*PWMInterrupt Flag Clear begin*/
 185   1          /*PWMInterrupt Flag Clear end*/             
 186   1      }
 187          #if !defined (TK_USE_BTM)
 188          void BTMInterrupt()                     interrupt 9
 189          {
 190   1          /*BTM_it write here begin*/
 191   1          /*BTM_it write here*/
 192   1          /*<Generated by EasyCodeCube begin>*/
 193   1          /*<Generated by EasyCodeCube end>*/
 194   1          /*BTMInterrupt Flag Clear begin*/
 195   1          /*BTMInterrupt Flag Clear end*/             
 196   1      }
 197          #endif
 198          void INT2Interrupt()            interrupt 10
 199          {       
 200   1          /*INT2_it write here begin*/
 201   1          /*INT2_it write here*/
 202   1          /*<Generated by EasyCodeCube begin>*/
 203   1          /*<Generated by EasyCodeCube end>*/
 204   1          /*INT2Interrupt Flag Clear begin*/
 205   1          /*INT2Interrupt Flag Clear end*/            
 206   1      }
 207          void ACMPInterrupt()            interrupt 12
 208          {
 209   1          /*ACMP_it write here begin*/
 210   1          /*ACMP_it write here*/
 211   1          /*<Generated by EasyCodeCube begin>*/
 212   1          /*<Generated by EasyCodeCube end>*/
 213   1          /*ACMPInterrupt Flag Clear begin*/
 214   1          /*ACMPInterrupt Flag Clear end*/            
 215   1      }
 216          void Timer3Interrupt()          interrupt 13
 217          {
 218   1          /*Timer3_it write here begin*/
 219   1          /*Timer3_it write here*/
 220   1      //      if(set_hour==hour && set_minute==minute && set_second==second)
 221   1      //      {
 222   1      //              Lcd_Clear(0xFFFF);
 223   1      //              Gui_DrawFont_GBK24(0,50,GRAY1,BACK_COLOR,"TIME OUT!!!");
 224   1      //              Delay_ms(5000);
 225   1      //      }
 226   1          /*<Generated by EasyCodeCube begin>*/
 227   1          /*<Generated by EasyCodeCube end>*/
 228   1          /*Timer3Interrupt Flag Clear begin*/
 229   1          TIM3_ClearFlag(TIM3_FLAG_TF3);
 230   1          TIM3_ClearFlag(TIM3_FLAG_EXF3);
 231   1          /*Timer3Interrupt Flag Clear end*/          
 232   1      }
 233          void Timer4Interrupt()          interrupt 14
 234          {
 235   1          /*Timer4_it write here begin*/
 236   1          /*Timer4_it write here*/
C51 COMPILER V9.54   SC_IT                                                                 04/19/2023 15:54:50 PAGE 5   

 237   1          if(count<100)
 238   1          {
 239   2              count++;
 240   2          }
 241   1          else
 242   1          {
 243   2              count=0;
 244   2              second+=1;
 245   2              if(second>=60)
 246   2              {
 247   3                  second=0;
 248   3                  minute++;
 249   3              }
 250   2              if(minute>=60)
 251   2              {
 252   3                  minute=0;
 253   3                  hour++;
 254   3              }
 255   2              if(hour>=24)
 256   2              {
 257   3                  hour=0;
 258   3                  day++;
 259   3              }
 260   2          }
 261   1          /*<Generated by EasyCodeCube begin>*/
 262   1          /*<Generated by EasyCodeCube end>*/
 263   1          /*Timer4Interrupt Flag Clear begin*/
 264   1          TIM4_ClearFlag(TIM4_FLAG_TF4);
 265   1          TIM4_ClearFlag(TIM4_FLAG_EXF4);
 266   1          /*Timer4Interrupt Flag Clear end*/          
 267   1      }
 268          void USCI1Interrupt()           interrupt 15            
 269          {       
 270   1          /*USCI1_it write here begin*/
 271   1          /*USCI1_it write here*/
 272   1          /*<Generated by EasyCodeCube begin>*/
 273   1          /*<Generated by EasyCodeCube end>*/
 274   1          /*USCI1Interrupt Flag Clear begin*/
 275   1          /*USCI1Interrupt Flag Clear end*/           
 276   1      }
 277          void USCI2Interrupt()           interrupt 16            
 278          {       
 279   1          /*USCI2_it write here begin*/
 280   1          /*USCI2_it write here*/
 281   1          if(USCI2_GetFlagStatus(USCI2_UART_FLAG_RI)==SET) //得到接受区缓存数据并置入Recbuff里
 282   1          {
 283   2                      Recbuff[i++]=USCI2_UART_ReceiveData8();
 284   2                      if(i>49) i=0;
 285   2          }
 286   1      //    if(USCI2_GetFlagStatus(USCI2_UART_FLAG_RI)==SET) //得到接受区缓存数据并置入abuf里
 287   1      //    {
 288   1      //        abuf = USCI2_UART_ReceiveData8();
 289   1      //    }
 290   1          /*<Generated by EasyCodeCube begin>*/
 291   1          /*<Generated by EasyCodeCube end>*/
 292   1          /*USCI2Interrupt Flag Clear begin*/
 293   1          USCI2_ClearFlag(USCI2_UART_FLAG_RI);
 294   1          USCI2_ClearFlag(USCI2_UART_FLAG_TI);
 295   1          /*USCI2Interrupt Flag Clear end*/           
 296   1      }
 297          void USCI3Interrupt()           interrupt 17            
 298          {
C51 COMPILER V9.54   SC_IT                                                                 04/19/2023 15:54:50 PAGE 6   

 299   1          /*USCI3_it write here begin*/
 300   1          /*USCI3_it write here*/
 301   1          /*<Generated by EasyCodeCube begin>*/
 302   1          /*<Generated by EasyCodeCube end>*/
 303   1          /*USCI3Interrupt Flag Clear begin*/
 304   1          USCI3_ClearFlag(USCI3_TWI_FLAG_TWIF);
 305   1          /*USCI3Interrupt Flag Clear end*/           
 306   1      }
 307          void USCI4Interrupt()           interrupt 18            
 308          {
 309   1          /*USCI4_it write here begin*/
 310   1          /*USCI4_it write here*/
 311   1          /*<Generated by EasyCodeCube begin>*/
 312   1          /*<Generated by EasyCodeCube end>*/
 313   1          /*USCI4Interrupt Flag Clear begin*/
 314   1          /*USCI4Interrupt Flag Clear end*/           
 315   1      }
 316          void USCI5Interrupt()           interrupt 19            
 317          {
 318   1          /*USCI5_it write here begin*/       
 319   1          /*USCI5_it write here*/
 320   1          /*<Generated by EasyCodeCube begin>*/
 321   1          /*<Generated by EasyCodeCube end>*/
 322   1          /*USCI5Interrupt Flag Clear begin*/
 323   1          /*USCI5Interrupt Flag Clear end*/           
 324   1      }
 325          void LPDInterrupt()             interrupt 22            
 326          {
 327   1          /*LPD_it write here begin*/
 328   1          /*LPD_it write here*/
 329   1          /*<Generated by EasyCodeCube begin>*/
 330   1          /*<Generated by EasyCodeCube end>*/
 331   1          /*LPDInterrupt Flag Clear begin*/
 332   1          /*LPDInterrupt Flag Clear end*/             
 333   1      }
*** WARNING C230 IN LINE 333 OF ..\User\SC_it.c: 'music_t': uses undefined struct/union tag 'MUSIC_T'


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    793    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     24    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
