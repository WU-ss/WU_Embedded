C51 COMPILER V9.54   SC95F_TIMER1                                                          10/29/2022 17:36:02 PAGE 1   
C51 COMPILER V9.54, COMPILATION OF MODULE SC95F_TIMER1
OBJECT MODULE PLACED IN ..\Output\sc95f_timer1.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_timer1.c LARGE OBJECTADVANCED OPTIMIZE(8,SIZE
                    -) BROWSE INCDIR(..\FWLib\SC95F_Lib\inc;..\User;..\Bank1;..\Bank2;..\Bank3) DEFINE(SC95F8x3x) DEBUG PRINT(..\List\sc95f_t
                    -imer1.lst) TABS(2) OBJECT(..\Output\sc95f_timer1.obj)
line level    source
   1         
   2         
   3         
   4         
   5         
   6         
   7         
   8         
   9         
  10          
  11          #include "sc95f_timer1.h"
  12          
  13          
  19          void TIM1_DeInit(void)
  20          {
  21   1        TMOD &= 0X0F;
  22   1        TCON &= 0X37;
  23   1        TMCON &= 0XFD;
  24   1        TH1 = 0X00;
  25   1        TL1 = 0X00;
  26   1        ET1 = 0;
  27   1        IPT1 = 0;
  28   1      }
  29          
  30          
  38          void TIM1_TimeBaseInit(TIM1_PresSel_TypeDef TIM1_PrescalerSelection,
  39                                 TIM1_CountMode_TypeDef TIM1_CountMode)
  40          {
  41   1        if(TIM1_PrescalerSelection == TIM1_PRESSEL_FSYS_D12)
  42   1        {
  43   2          TMCON &= 0xFD;
  44   2        }
  45   1        else if(TIM1_PrescalerSelection == TIM1_PRESSEL_FSYS_D1)
  46   1        {
  47   2          TMCON |= 0x02;
  48   2        }
  49   1      
  50   1        
  51   1        if(TIM1_CountMode == TIM1_MODE_TIMER)
  52   1        {
  53   2          TMOD &= 0xBF;
  54   2        }
  55   1        else if(TIM1_CountMode == TIM1_MODE_COUNTER)
  56   1        {
  57   2          TMOD |= 0x40;
  58   2        }
  59   1      }
  60          
  61          
  68          void TIM1_WorkMode0Config(uint16_t TIM1_SetCounter)
  69          {
  70   1        TMOD &= 0XCF;
  71   1        TL1 = (uint8_t)TIM1_SetCounter;
  72   1        TH1 = (TIM1_SetCounter >> 5);
  73   1      }
  74          
  75          
  82          void TIM1_WorkMode1Config(uint16_t TIM1_SetCounter)
  83          {
  84   1        TMOD &= 0XCF;
  85   1        TMOD |= 0X10;
  86   1        TL1 = TIM1_SetCounter % 256;
  87   1        TH1 = TIM1_SetCounter / 256;
  88   1      }
  89          
  90          
  97          void TIM1_WorkMode2Config(uint8_t TIM1_SetCounter)
  98          {
  99   1        TMOD &= 0XCF;
 100   1        TMOD |= 0X20;
 101   1        TL1 = TIM1_SetCounter;
 102   1        TH1 = TIM1_SetCounter;
 103   1      }
 104          
 105          
 113          void TIM1_WorkModeConfig(TIM1_WorkMode_TypeDef TIM1_WorkMode, uint16_t TIM1_SetCounter)
 114          {
 115   1        switch(TIM1_WorkMode)
 116   1        {
 117   2          case TIM1_WORK_MODE0:
 118   2            TIM1_WorkMode0Config(TIM1_SetCounter);
 119   2            break;
 120   2      
 121   2          case TIM1_WORK_MODE1:
 122   2            TIM1_WorkMode1Config(TIM1_SetCounter);
 123   2            break;
 124   2      
 125   2          case TIM1_WORK_MODE2:
 126   2            TIM1_WorkMode2Config(TIM1_SetCounter);
 127   2            break;
 128   2      
 129   2          default:
 130   2            break;
 131   2        }
 132   1      }
 133          
 134          
 141          void TIM1_Mode0SetReloadCounter(uint16_t TIM1_SetCounter)
 142          {
 143   1        TL1 = (uint8_t)TIM1_SetCounter;
 144   1        TH1 = (TIM1_SetCounter >> 5);
 145   1      }
 146          
 147          
 154          void TIM1_Mode1SetReloadCounter(uint16_t TIM1_SetCounter)
 155          {
 156   1        TL1 = TIM1_SetCounter % 256;
 157   1        TH1 = TIM1_SetCounter / 256;
 158   1      }
 159          
 160          
 167          void TIM1_Cmd(FunctionalState NewState)
 168          {
 169   1        if(NewState == DISABLE)
 170   1        {
 171   2          TR1 = 0;
 172   2        }
 173   1        else
 174   1        {
 175   2          TR1 = 1;
 176   2        }
 177   1      }
 178          
 179          
 187          void TIM1_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 188          {
 189   1        if(NewState == DISABLE)
 190   1        {
 191   2          ET1 = 0;
 192   2        }
 193   1        else
 194   1        {
 195   2          ET1 = 1;
 196   2        }
 197   1      
 198   1        
 199   1        if(Priority == LOW)
 200   1        {
 201   2          IPT1 = 0;
 202   2        }
 203   1        else
 204   1        {
 205   2          IPT1 = 1;
 206   2        }
 207   1      }
 208          
 209          
 210          
MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    212    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.
C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
