C51 COMPILER V9.01   SC95F_TIMER3                                                          09/07/2020 16:59:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_TIMER3
OBJECT MODULE PLACED IN ..\Output\sc95f_timer3.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_timer3.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib
                    -\inc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_timer3.lst) OBJECT(..\Output\sc95f_timer3.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : sc95f_timerx.c
   4          //      作者            : 
   5          //      模块功能        : TIMER3固件库函数C文件
   6          //      局部函数列表:
   7          //  最后更正日期: 2020/8/13
   8          //      版本            : V1.0 
   9          //  说明        ：该文件仅适用于SC95Fxx1x、SC95Fxx2x系列芯片  
  10          //*************************************************************
  11          
  12          #include "sc95f_timer3.h"
  13          
  14          /**************************************************
  15          *函数名称：void TIMX_DeInit(void)
  16          *函数功能：TIMER3相关寄存器复位至缺省值
  17          *入口参数：void
  18          *出口参数：void
  19          **************************************************/
  20          void TIM3_DeInit()
  21          {
  22   1              TXINX = 0x03;    //TIMER3 选择
  23   1              TXCON = 0X00;
  24   1              TXMOD = 0X00;
  25   1              RCAPXH = 0X00;
  26   1              RCAPXL = 0X00;
  27   1              THX = 0X00;
  28   1              TLX = 0X00;
  29   1              IE1 &= 0X3F;
  30   1              IP1 &= 0X3F;
  31   1              ET2 = 0;
  32   1              IPT2 = 0;
  33   1      }
  34          
  35          /**************************************************
  36          *函数名称：void TIM3_PrescalerSelection(TIMX_TimerSelect_TypeDef TIMX_TimerSelect, TIMX_PresSel_TypeDef TI
             -MX_PrescalerSelection)
  37          *函数功能：TIMER3 预分频选择
  38          *入口参数：TIM2_PrescalerSelection      预分频选择
  39          *出口参数：void
  40          **************************************************/
  41          void TIM3_PrescalerSelection(TIM3_PresSel_TypeDef TIM3_PrescalerSelection)
  42          {
  43   1              TXINX = 0x03;
  44   1              if(TIM3_PrescalerSelection == TIM3_PRESSEL_FSYS_D12)
  45   1              {
  46   2                      TXMOD &= 0X7F;
  47   2              }
  48   1              else if(TIM3_PrescalerSelection == TIM3_PRESSEL_FSYS_D1)
  49   1              {
  50   2                      TXMOD |= 0X80;
  51   2              }       
  52   1      }
  53          
C51 COMPILER V9.01   SC95F_TIMER3                                                          09/07/2020 16:59:34 PAGE 2   

  54          /**************************************************
  55          *函数名称：void TIM3_WorkMode1Config(uint16_t TIM3_SetCounter)
  56          *函数功能：TIMER3工作模式1配置函数
  57          *入口参数：uint16_t TIM3_SetCounter     配置计数初值
  58          *出口参数：void
  59          **************************************************/
  60          void TIM3_WorkMode1Config(uint16_t TIM3_SetCounter)
  61          {       
  62   1              TXINX = 0x03;
  63   1              RCAPXL = TIM3_SetCounter % 256;
  64   1              RCAPXH = TIM3_SetCounter / 256;
  65   1      
  66   1              TLX = RCAPXL;
  67   1              THX = RCAPXH;
  68   1      }
  69          
  70          /*****************************************************
  71          *函数名称：void TIM3_Cmd(FunctionalState NewState)
  72          *函数功能：TIMER3功能开关函数
  73          *入口参数：FunctionalState NewState     功能启动/关闭选择
  74          *出口参数：void
  75          *****************************************************/
  76          void TIM3_Cmd(FunctionalState NewState)
  77          {
  78   1              TXINX = 0x03;
  79   1              if (NewState == DISABLE)
  80   1          {
  81   2             TRX = 0;
  82   2          }
  83   1          else
  84   1          {
  85   2             TRX = 1;
  86   2          }
  87   1      }
  88          
  89          /*****************************************************
  90          *函数名称：void TIM3_ITConfig(TIM3_TimerSelect_TypeDef TIM3_TimerSelect, FunctionalState NewState, Priorit
             -yStatus Priority)
  91          *函数功能：TIMER3中断初始化
  92          *入口参数：NewState     中断使能/关闭选择
  93                             Priority     中断优先级选择
  94          *出口参数：void
  95          *****************************************************/
  96          void TIM3_ITConfig(FunctionalState NewState, PriorityStatus Priority)
  97          {
  98   1              TXINX = 0x03;
  99   1              if(NewState == DISABLE)
 100   1              {
 101   2                      IE1 &= 0XBF;
 102   2              }
 103   1              else
 104   1              {
 105   2                      IE1 |= 0X40;
 106   2              }
 107   1              if(Priority == LOW)
 108   1              {
 109   2                      IP1 &= 0XBF;
 110   2              }
 111   1              else
 112   1              {
 113   2                      IP1 |= 0X40;
 114   2              }
C51 COMPILER V9.01   SC95F_TIMER3                                                          09/07/2020 16:59:34 PAGE 3   

 115   1      }
 116          
 117          /*****************************************************
 118          *函数名称：FlagStatus TIM3_GetFlagStatus(void)
 119          *函数功能：获得TIMER3中断标志状态
 120          *入口参数：TIM3_Flag    TIMER3标志选择
 121          *出口参数：FlagStatus   TIMER3中断标志状态      
 122          *****************************************************/
 123          FlagStatus TIM3_GetFlagStatus()
 124          {       
 125   1              FlagStatus status = RESET;
 126   1              TXINX = 0x03;
 127   1              if(TFX)
 128   1              {
 129   2                      status = SET;                   
 130   2              }
 131   1              else
 132   1              {
 133   2                      status = RESET; 
 134   2              }
 135   1              return status;  
 136   1      }
 137          
 138          /*****************************************************
 139          *函数名称：void TIM3_ClearFlag(TIM3_Flag_TypeDef TIM3_Flag)
 140          *函数功能：清除TIMER3中断标志状态
 141          *入口参数：TIM3_Flag   TIMER3标志选择
 142          *出口参数：void 
 143          *****************************************************/
 144          void TIM3_ClearFlag(TIM3_Flag_TypeDef TIM3_Flag)
 145          {
 146   1              TXINX = 0x03;
 147   1              TXCON &= (~TIM3_Flag);
 148   1      }
 149          
 150          #if defined (SC95F8x2x) || defined (SC95F7x2x)  
 151          /**************************************************
 152          *函数名称：void TIM3_TimeBaseInit(TIM3_CountMode_TypeDef TIM3_CountMode, TIM3_CountDirection_TypeDef TIM3_
             -CountDirection)
 153          *函数功能：TIM3基本设置配置函数
 154          *入口参数：
 155                             TIM3_CountMode                       计数/定时模式选择
 156                             TIM3_CountDirection          计数方向选择
 157          *出口参数：void
 158          **************************************************/
 159          void TIM3_TimeBaseInit(TIM3_CountMode_TypeDef TIM3_CountMode, TIM3_CountDirection_TypeDef TIM3_CountDirect
             -ion)
 160          {       
 161   1              TXINX = 0x03;
 162   1              if(TIM3_CountMode == TIM3_MODE_TIMER)
 163   1              {
 164   2                      TXCON &= 0XFD;
 165   2              }
 166   1              else if(TIM3_CountMode == TIM3_MODE_COUNTER)
 167   1              {
 168   2                      TXCON |= 0X02;
 169   2              }
 170   1      /************************************************************/
 171   1              if(TIM3_CountDirection == TIM3_COUNTDIRECTION_UP)
 172   1              {
 173   2                      TXMOD &= 0XFE;
 174   2              }
C51 COMPILER V9.01   SC95F_TIMER3                                                          09/07/2020 16:59:34 PAGE 4   

 175   1              else if(TIM3_CountDirection == TIM3_COUNTDIRECTION_DOWN_UP)
 176   1              {
 177   2                      TXMOD |= 0X01;
 178   2              }                       
 179   1      }
 180          
 181          /**************************************************
 182          *函数名称：void TIM3_WorkMode0Config(uint16_t TIM3_SetCounter)
 183          *函数功能：TIMER3工作模式0配置函数
 184          *入口参数：uint16_t TIM3_SetCounter     配置计数初值
 185          *出口参数：void
 186          **************************************************/
 187          void TIM3_WorkMode0Config(uint16_t TIM3_SetCounter)
 188          {
 189   1              TXINX = 0x03;
 190   1      
 191   1              TLX = TIM3_SetCounter % 256;
 192   1              THX = TIM3_SetCounter / 256;    
 193   1      }
 194          /**************************************************
 195          *函数名称：void TIM3_WorkMode3Config(uint16_t TIM3_SetCounter)
 196          *函数功能：TIMER3工作模式3配置函数
 197          *入口参数：uint16_t TIM3_SetCounter             配置计数初值
 198          *出口参数：void
 199          **************************************************/
 200          void TIM3_WorkMode3Config(uint16_t TIM3_SetCounter)
 201          {
 202   1              TXINX = 0x03;
 203   1              RCAPXL = TIM3_SetCounter % 256;
 204   1              RCAPXH = TIM3_SetCounter / 256;
 205   1              TXMOD |= 0X02;                  
 206   1      }
 207          /**************************************************
 208          *函数名称：void TIM3_WorkModeConfig(TIM3_WorkMode_TypeDef TIM3_WorkMode, uint16_t TIM3_SetCounter)
 209          *函数功能：TIMER3工作模式配置函数
 210          *入口参数：TIM3_WorkMode_TypeDef TIM3_WorkMode  TIMER3工作模式选择
 211                             uint16_t TIM3_SetCounter                     TIMER3计数初值配置      
 212          *出口参数：void
 213          **************************************************/
 214          void TIM3_WorkModeConfig(TIM3_WorkMode_TypeDef TIM3_WorkMode, uint16_t TIM3_SetCounter)
 215          {       
 216   1              switch (TIM3_WorkMode)
 217   1              {
 218   2                      case TIM3_WORK_MODE0:
 219   2                              TIM3_WorkMode0Config(TIM3_SetCounter);
 220   2                      break;
 221   2      
 222   2                      case TIM3_WORK_MODE1:
 223   2                              TIM3_WorkMode1Config(TIM3_SetCounter);
 224   2                      break;
 225   2      
 226   2                      case TIM3_WORK_MODE3:
 227   2                              TIM3_WorkMode3Config(TIM3_SetCounter);
 228   2                      break;
 229   2      
 230   2                      default:
 231   2                      break;
 232   2              }               
 233   1      }
 234          /*****************************************************
 235          *函数名称：void TIM3_SetEXEN3(FunctionalState NewState)
 236          *函数功能：TIMER3_EXEN3配置函数
C51 COMPILER V9.01   SC95F_TIMER3                                                          09/07/2020 16:59:34 PAGE 5   

 237          *入口参数：FunctionalState NewState             EXEN3使能选择
 238          *出口参数：void
 239          *****************************************************/
 240          void TIM3_SetEXEN3(FunctionalState NewState)
 241          {
 242   1              TXINX = 0x03;
 243   1              if (NewState == DISABLE)
 244   1          {
 245   2             EXENX = 0;
 246   2          }
 247   1          else
 248   1          {
 249   2             EXENX = 1;
 250   2          }
 251   1      }
 252          #endif
 253          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    219    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
