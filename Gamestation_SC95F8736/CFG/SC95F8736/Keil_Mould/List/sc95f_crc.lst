C51 COMPILER V9.01   SC95F_CRC                                                             09/07/2020 16:59:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_CRC
OBJECT MODULE PLACED IN ..\Output\sc95f_crc.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_crc.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib\in
                    -c;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_crc.lst) OBJECT(..\Output\sc95f_crc.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : sc95f_CRC.c
   4          //      作者            : 
   5          //      模块功能        : CRC固件库函数C文件
   6          //      局部函数列表:
   7          //  最后更正日期: 2020/8/13
   8          //      版本            : V1.0 
   9          //  说明        ：该文件仅适用于SC95Fxx1x、SC95Fxx2x系列芯片  
  10          //*************************************************************
  11          
  12          #include "sc95f_CRC.h"
  13          #include"intrins.H"
  14          
  15          /**************************************************
  16          *函数名称：unsigned long CRC_All()
  17          *函数功能：求本工程HEX的CRC32校验值，该计算结果会根据OPTION的IAR Range不同而变化
  18          *入口参数：void
  19          *出口参数：uint32_t 返回CRC计算结果
  20          **************************************************/
  21          uint32_t CRC_All()
  22          {
  23   1          uint32_t CRC_Result;
  24   1          OPERCON |= 0x01;
  25   1          _nop_();
  26   1          _nop_();
  27   1          _nop_();
  28   1          _nop_();
  29   1          _nop_();
  30   1          _nop_();
  31   1          _nop_();
  32   1          _nop_();
  33   1          _nop_();
  34   1          _nop_();
  35   1          CRCINX = 0x00;
  36   1          CRC_Result = CRCREG;
  37   1          CRC_Result = CRCREG*256 + CRC_Result;
  38   1          CRC_Result = CRCREG*65536 + CRC_Result;
  39   1          CRC_Result = CRCREG*16777216 + CRC_Result;
  40   1              return CRC_Result;
  41   1      }
  42          
  43          /**************************************************
  44          *函数名称：uint32_t CRC_Frame(uint8_t* buff,uint8_t Length)
  45          *函数功能：求输入帧的CRC校验值
  46          *入口参数：uint8_t* buff,         传入需要进行CRC计算的数组
  47                             uint8_t Length         传入需要计算的数组长度
  48          *出口参数：uint32_t CRC计算结果
  49          **************************************************/
  50          uint32_t CRC_Frame(uint8_t* buff,uint8_t Length)
  51          {
  52   1          uint8_t i;
  53   1              uint32_t CRC_Result = 0;
  54   1              EA=0;
C51 COMPILER V9.01   SC95F_CRC                                                             09/07/2020 16:59:32 PAGE 2   

  55   1          OPERCON |= 0x02;
  56   1          _nop_();
  57   1          _nop_();
  58   1          _nop_();
  59   1          _nop_();
  60   1          _nop_();
  61   1          _nop_();
  62   1          _nop_();
  63   1          _nop_();
  64   1          _nop_();
  65   1          _nop_();
  66   1          for(i=0; i<Length; i++)
  67   1          {
  68   2              CRC_Result = *(buff + i);
  69   2              CRCREG = CRC_Result;
  70   2              _nop_();
  71   2              _nop_();
  72   2              _nop_();
  73   2              _nop_();
  74   2              _nop_();
  75   2              _nop_();
  76   2              _nop_();
  77   2              _nop_();
  78   2              _nop_();
  79   2              _nop_();            
  80   2          }
  81   1          CRCINX = 0x00;
  82   1          CRC_Result = CRCREG;
  83   1          CRC_Result = CRCREG*256 + CRC_Result;
  84   1          CRC_Result = CRCREG*65536 + CRC_Result;
  85   1          CRC_Result = CRCREG*16777216 + CRC_Result;
  86   1              EA=1;
  87   1              return CRC_Result;
  88   1      }
  89          
  90          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
