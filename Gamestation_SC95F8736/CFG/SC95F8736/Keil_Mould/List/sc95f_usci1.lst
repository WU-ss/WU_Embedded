C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_USCI1
OBJECT MODULE PLACED IN ..\Output\sc95f_usci1.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_usci1.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib\
                    -inc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_usci1.lst) OBJECT(..\Output\sc95f_usci1.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : sc95f_usci1.c
   4          //      作者            : 
   5          //      模块功能        : USCI1固件库函数C文件
   6          //      局部函数列表:
   7          //  最后更正日期: 2020/8/13
   8          //      版本            : V1.0 
   9          //  说明        ：该文件仅适用于SC95Fxx1x、SC95Fxx2x系列芯片  
  10          //*************************************************************
  11          
  12          #include "sc95f_usci1.h"
  13          
  14          /**************************************************
  15          *函数名称：void USCI1_DeInit(void)
  16          *函数功能：USCI1相关寄存器复位至缺省值
  17          *入口参数：void
  18          *出口参数：void
  19          **************************************************/
  20          void USCI1_DeInit(void)
  21          {
  22   1              OTCON &= 0X3F;
  23   1              US1CON0 = 0X00;
  24   1              US1CON1 = 0X00;
  25   1              US1CON2 = 0X00;
  26   1              US1CON3 = 0X00;
  27   1              IE2 &= (~0X01);
  28   1              IP2 &= (~0X01);                 
  29   1      }
  30          
  31          /**************************************************
  32          *函数名称：void USCI1_SPI_Init(USCI1_SPI_FirstBit_TypeDef FirstBit, USCI1_SPI_BaudRatePrescaler_TypeDef Ba
             -udRatePrescaler,USCI1_SPI_Mode_TypeDef Mode,
  33                                                                   USCI1_SPI_ClockPolarity_TypeDef ClockPolarity, USCI1_SPI_ClockPhase_TypeDef ClockPhase,USCI1_SPI_T
             -XE_INT_TypeDef SPI_TXE_INT,USCI1_TransmissionMode_TypeDef TransmissionMode)
  34          *函数功能：SPI初始化配置函数
  35          *入口参数：FirstBit                             优先传送位选择（MSB/LSB）
  36                             BaudRatePrescaler    SPI时钟频率选择
  37                             Mode                                 SPI工作模式选择
  38                             ClockPolarity                SPI时钟极性选择
  39                             ClockPhase                   SPI时钟相位选择
  40                             SPI_TXE_INT                  发送缓存器中断允许选择,该功能在SC95FXX1X芯片上无效
  41                             TransmissionMode     SPI传输模式选择 8位/16位
  42          *出口参数：void                                                                                                                                                                                         
  43          **************************************************/
  44          void USCI1_SPI_Init(USCI1_SPI_FirstBit_TypeDef FirstBit, USCI1_SPI_BaudRatePrescaler_TypeDef BaudRatePresc
             -aler, USCI1_SPI_Mode_TypeDef Mode,
  45                                            USCI1_SPI_ClockPolarity_TypeDef ClockPolarity, USCI1_SPI_ClockPhase_TypeDef ClockPhase, USCI1_SPI_TX
             -E_INT_TypeDef SPI_TXE_INT, USCI1_TransmissionMode_TypeDef TransmissionMode)
  46          {
  47   1              SPI_TXE_INT =  USCI1_SPI_TXE_DISINT;//SPI_TXE_INT该功能在SC95FXX1X芯片上无效    
  48   1              OTCON = (OTCON & 0X3F) | 0X40;
  49   1              US1CON1 = US1CON1 & (~0X05) | FirstBit  | TransmissionMode;
  50   1              US1CON0 = US1CON0 & 0X80 | BaudRatePrescaler | Mode | ClockPolarity | ClockPhase;
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 2   

  51   1      }
  52          
  53          /*****************************************************
  54          *函数名称：void USCI1_SPI_Cmd(FunctionalState NewState)
  55          *函数功能：SPI功能开关函数
  56          *入口参数：FunctionalState NewState     功能启动/关闭选择
  57          *出口参数：void
  58          *****************************************************/
  59          void USCI1_SPI_Cmd(FunctionalState NewState)
  60          {
  61   1              OTCON = (OTCON & 0X3F) | 0X40;
  62   1              if(NewState != DISABLE)
  63   1              {
  64   2                      US1CON0 |= 0X80;
  65   2              }       
  66   1              else
  67   1              {
  68   2                      US1CON0 &= (~0X80);
  69   2              }       
  70   1      }
  71          
  72          
  73          /*****************************************************
  74          *函数名称：void USCI1_SPI_SendData_8(uint8_t Data)
  75          *函数功能：USCI1 SPI发送数据
  76          *入口参数：Data         发送的数据
  77          *出口参数：void
  78          *****************************************************/
  79          void USCI1_SPI_SendData_8(uint8_t Data)
  80          {
  81   1              US1CON2 = Data;
  82   1      }
  83          
  84          /*****************************************************
  85          *函数名称：uint8_t USCI1_SPI_ReceiveData_8(void)
  86          *函数功能：获得US1CON2中的值
  87          *入口参数：void
  88          *出口参数：uint8_t              
  89          *****************************************************/
  90          uint8_t USCI1_SPI_ReceiveData_8(void)
  91          {
  92   1              return US1CON2;         
  93   1      }
  94          
  95          /*****************************************************
  96          *函数名称：void USCI1_SPI_SendData_16(uint16_t Data)
  97          *函数功能：US1CON2 SPI发送数据
  98          *入口参数：Data         发送的数据
  99          *出口参数：void
 100          *****************************************************/
 101          void USCI1_SPI_SendData_16(uint16_t Data)
 102          {
 103   1              US1CON3 = (uint8_t) (Data >> 8);
 104   1              US1CON2 = (uint8_t) Data;
 105   1      }
 106          
 107          /*****************************************************
 108          *函数名称：uint16_t USCI1_SPI_ReceiveData_16(void)
 109          *函数功能：获得US1CON2中的值
 110          *入口参数：void
 111          *出口参数：uint16_t             
 112          *****************************************************/
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 3   

 113          uint16_t USCI1_SPI_ReceiveData_16(void)
 114          {
 115   1              uint16_t SPI_data;
 116   1              SPI_data = (uint16_t)((US1CON3 << 8) |  US1CON2);
 117   1              return SPI_data;                
 118   1      }
 119          
 120          /**************************************************
 121          *函数名称：void USCI1_TWI_Slave_Init(uint8_t TWI_Address)
 122          *函数功能：USCI1 TWI 从机初始化配置函数
 123          *入口参数：TWI_Address  7位从机地址配置                 
 124          *出口参数：void
 125          **************************************************/
 126          void USCI1_TWI_Slave_Init(uint8_t TWI_Address)
 127          {
 128   1              OTCON = OTCON & 0X3F | 0X80;
 129   1              US1CON2 = TWI_Address<<1;               
 130   1      }
 131          
 132          /**************************************************
 133          *函数名称：void USCI1_TWI_MasterCommunicationRate(USCI1_TWI_MasterCommunicationRate_TypeDef TWI_MasterComm
             -unicationRate)
 134          *函数功能：USCI1 TWI主机模式下通讯速率设定
 135          *入口参数：TWI_MasterCommunicationRate TWI主机模式下通讯速率
 136          *出口参数：void
 137          **************************************************/
 138          void USCI1_TWI_MasterCommunicationRate(USCI1_TWI_MasterCommunicationRate_TypeDef TWI_MasterCommunicationRa
             -te)
 139          {
 140   1              OTCON = OTCON & 0X3F | 0X80;            //选择usci1为TWI
 141   1              US1CON1 |= TWI_MasterCommunicationRate;         
 142   1      }
 143          
 144          /**************************************************
 145          *函数名称：void USCI1_TWI_Start(void)
 146          *函数功能：USCI1 TWI 起始位
 147          *入口参数：void
 148          *出口参数：void
 149          **************************************************/
 150          void USCI1_TWI_Start(void)
 151          {
 152   1              US1CON1 |= 0x20;                
 153   1      }
 154          
 155          /**************************************************
 156          *函数名称：void USCI1_TWI_MasterModeStop(void)
 157          *函数功能：USCI1 TWI主机模式停止位
 158          *入口参数：void
 159          *出口参数：void
 160          **************************************************/
 161          void USCI1_TWI_MasterModeStop(void)
 162          {
 163   1              US1CON1 |= 0x10;                
 164   1      }
 165          
 166          /**************************************************
 167          *函数名称：void USCI1_TWI_SlaveClockExtension(FunctionalState NewState)
 168          *函数功能：USCI1 TWI从机模式时钟延长功能位
 169          *入口参数：FunctionalState NewState             接收应答使能/失能选择
 170          *出口参数：void
 171          **************************************************/
 172          void USCI1_TWI_SlaveClockExtension(FunctionalState NewState)
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 4   

 173          {
 174   1              OTCON = OTCON & 0X3F | 0X80;
 175   1              if (NewState != DISABLE)
 176   1              {
 177   2                      US1CON1 |= 0x40;        
 178   2              }
 179   1              else
 180   1              {
 181   2                      US1CON1 &= 0XBF;
 182   2              }       
 183   1      }
 184          
 185          /**************************************************
 186          *函数名称：void USCI1_TWI_AcknowledgeConfig(FunctionalState NewState)
 187          *函数功能：TWI接收应答使能函数
 188          *入口参数：FunctionalState NewState             接收应答使能/失能选择                   
 189          *出口参数：void
 190          **************************************************/
 191          void USCI1_TWI_AcknowledgeConfig(FunctionalState NewState)
 192          {
 193   1              OTCON = OTCON & 0X3F | 0X80;
 194   1              if (NewState != DISABLE)
 195   1              {
 196   2                      US1CON0 |= 0X08;        
 197   2              }
 198   1              else
 199   1              {
 200   2                      US1CON0 &= 0XF7;
 201   2              }
 202   1      }
 203          
 204          /**************************************************
 205          *函数名称：void USCI1_TWI_GeneralCallCmd(FunctionalState NewState)
 206          *函数功能：TWI通用地址响应使能函数
 207          *入口参数：FunctionalState NewState             通用地址响应使能/失能选择                       
 208          *出口参数：void
 209          **************************************************/
 210          void USCI1_TWI_GeneralCallCmd(FunctionalState NewState)
 211          {
 212   1              OTCON = OTCON & 0X3F | 0X80;
 213   1              if (NewState != DISABLE)
 214   1              {
 215   2                      US1CON2 |= 0X01;        
 216   2              }
 217   1              else
 218   1              {
 219   2                      US1CON2 &= 0XFE;
 220   2              }       
 221   1      }
 222          
 223          /*****************************************************
 224          *函数名称：void USCI1_TWI_Cmd(FunctionalState NewState)
 225          *函数功能：TWI功能开关函数
 226          *入口参数：FunctionalState NewState     功能启动/关闭选择
 227          *出口参数：void
 228          *****************************************************/
 229          void USCI1_TWI_Cmd(FunctionalState NewState)
 230          {
 231   1              OTCON = OTCON & 0X3F | 0X80;
 232   1              if(NewState != DISABLE)
 233   1              {
 234   2                      US1CON0 |= 0X80;        
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 5   

 235   2              }
 236   1              else
 237   1              {
 238   2                      US1CON0 &= (~0X80);
 239   2              }
 240   1      }
 241          
 242          /*****************************************************
 243          *函数名称：void USCI1_TWI_SendData(uint8_t Data)
 244          *函数功能：TWI发送数据
 245          *入口参数：Data         发送的数据
 246          *出口参数：void
 247          *****************************************************/
 248          void USCI1_TWI_SendData(uint8_t Data)
 249          {
 250   1              US1CON3 = Data; 
 251   1      }
 252          /*****************************************************
 253          *函数名称：void USCI1_TWI_SendAddr(uint8_t Addr,USCI1_TWI_RWType RW)
 254          *函数功能：TWI发送地址，读写类型
 255          *入口参数：Addr         发送的地址
 256                                                   RW                     读写类型
 257          *出口参数：void
 258          *****************************************************/
 259          void USCI1_TWI_SendAddr(uint8_t Addr,USCI1_TWI_RWType RW)
 260          {
 261   1              US1CON3 = (Addr<<1)|RW; 
 262   1      }
 263          /*****************************************************
 264          *函数名称：uint8_t USCI1_TWI_SendData(void)
 265          *函数功能：获得US1CON3中的值
 266          *入口参数：void
 267          *出口参数：uint8_t      
 268          *****************************************************/
 269          uint8_t USCI1_TWI_ReceiveData(void)
 270          {
 271   1              return US1CON3;
 272   1      }
 273          
 274          /**************************************************
 275          *函数名称：void USCI1_UART_Init(uint32_t UARTFsys, uint32_t BaudRate, USCI1_UART_Mode_TypeDef Mode, USCI1_
             -UART_RX_TypeDef RxMode)
 276          *函数功能：UART初始化配置函数
 277          *入口参数：UARTFsys     系统时钟频率
 278                             BaudRate             波特率
 279                             Mode                 UART1工作模式
 280                             RxMode               接收允许选择
 281          *出口参数：void
 282          **************************************************/
 283          void USCI1_UART_Init(uint32_t UARTFsys, uint32_t BaudRate, USCI1_UART_Mode_TypeDef Mode, USCI1_UART_RX_Typ
             -eDef RxMode) 
 284          {
 285   1              OTCON |= 0xC0;
 286   1              US1CON0 = US1CON0 & 0X0F | Mode | RxMode;
 287   1              if(Mode == USCI1_UART_Mode_8B)
 288   1              {
 289   2                      if(BaudRate == USCI1_UART_BaudRate_FsysDIV12)
 290   2                      {
 291   3                              US1CON0 &= 0XDF;                
 292   3                      }
 293   2                      else if(BaudRate == USCI1_UART_BaudRate_FsysDIV4)
 294   2                      {
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 6   

 295   3                              US1CON0 |= 0X20;                
 296   3                      }
 297   2              }
 298   1              else
 299   1              {
 300   2                      US1CON2 = UARTFsys / BaudRate / 256;
 301   2                      US1CON1 = UARTFsys / BaudRate % 256;    
 302   2              }
 303   1      }
 304          
 305          /*****************************************************
 306          *函数名称：void USCI1_UART_SendData8(uint8_t Data)
 307          *函数功能：USCI1 UART发送8位数据
 308          *入口参数：Data         发送的数据
 309          *出口参数：void
 310          *****************************************************/
 311          void USCI1_UART_SendData8(uint8_t Data)
 312          {
 313   1         US1CON3 = Data;
 314   1      }
 315          
 316          /*****************************************************
 317          *函数名称：uint8_t USCI1_UART_ReceiveData8(void)
 318          *函数功能：获得US1CON3中的值
 319          *入口参数：void
 320          *出口参数：uint8_t              
 321          *****************************************************/
 322          uint8_t USCI1_UART_ReceiveData8(void)
 323          {
 324   1              return US1CON3;
 325   1      }
 326          
 327          /*****************************************************
 328          *函数名称：void USCI1_UART_SendData9(uint16_t Data)
 329          *函数功能：UART发送9位数据
 330          *入口参数：Data         发送的数据
 331          *出口参数：void
 332          *****************************************************/
 333          void USCI1_UART_SendData9(uint16_t Data)
 334          {
 335   1              uint8_t Data_9Bit;
 336   1              Data_9Bit = (Data>>8);
 337   1              if(Data_9Bit)
 338   1              {
 339   2                      US1CON0 |= 0x08;
 340   2              }
 341   1              else
 342   1              {
 343   2                      US1CON0 &= 0xf7;
 344   2              }
 345   1              
 346   1              US1CON3 = (uint8_t)Data;
 347   1      }
 348          
 349          /*****************************************************
 350          *函数名称：uint16_t USCI1_UART_ReceiveData9(void)
 351          *函数功能：获得US1CON3中的值及第九位的值
 352          *入口参数：void
 353          *出口参数：uint16_t             
 354          *****************************************************/
 355          uint16_t USCI1_UART_ReceiveData9(void)
 356          {
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 7   

 357   1              uint16_t Data9;
 358   1              Data9 =  US1CON3 + ((uint16_t)(US1CON0&0X04)<<6);
 359   1              US1CON0 &= 0XFB;
 360   1              return Data9;
 361   1      }
 362          
 363          /*****************************************************
 364          *函数名称：void USCI1_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 365          *函数功能：USCI1中断初始化
 366          *入口参数：FunctionalState NewState     中断使能/关闭选择
 367                             PriorityStatus Priority      中断优先级选择
 368          *出口参数：void
 369          *****************************************************/
 370          void USCI1_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 371          {
 372   1          if(NewState != DISABLE)
 373   1          {
 374   2             IE2 |= 0x01;
 375   2          }
 376   1          else
 377   1          {
 378   2             IE2 &= 0xFE;
 379   2          }
 380   1      /************************************************************/
 381   1              if(Priority != LOW)
 382   1              {
 383   2                      IP2 |= 0x01;
 384   2              }
 385   1              else
 386   1              {
 387   2                      IP2 &= 0xFE;
 388   2              }
 389   1      }
 390          
 391          /*****************************************************
 392          *函数名称：FlagStatus USCI1_GetFlagStatus(USCI1_Flag_TypeDef USCI1_FLAG)
 393          *函数功能：获得USCI1标志状态
 394          *入口参数：USCI1_FLAG           所需获取的标志位
 395          *出口参数：FlagStatus           USCI1标志状态   
 396          *****************************************************/
 397          FlagStatus USCI1_GetFlagStatus(USCI1_Flag_TypeDef USCI1_FLAG)
 398          {
 399   1              FlagStatus bitstatus = RESET;
 400   1      
 401   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)  
                      if((USCI1_FLAG==USCI1_SPI_FLAG_SPIF) || (USCI1_FLAG==USCI1_SPI_FLAG_WCOL))
                      #endif
 404   1              #if defined (SC95F8x2x) || defined (SC95F7x2x)  
 405   1              if((USCI1_FLAG==USCI1_SPI_FLAG_SPIF) || (USCI1_FLAG==USCI1_SPI_FLAG_WCOL) || (USCI1_FLAG==USCI1_SPI_FLAG_
             -TXE))
 406   1              #endif
 407   1              {
 408   2                      if((USCI1_FLAG & US1CON1) != (uint8_t)RESET)
 409   2                      {
 410   3                              bitstatus = SET;                        
 411   3                      }
 412   2                      else
 413   2                      {       
 414   3                              bitstatus = RESET;
 415   3                      }
 416   2              }
 417   1              else
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 8   

 418   1              {
 419   2                      if((USCI1_FLAG & US1CON0) != (uint8_t)RESET)
 420   2                      {
 421   3                              bitstatus = SET;                        
 422   3                      }
 423   2                      else
 424   2                      {       
 425   3                              bitstatus = RESET;
 426   3                      }
 427   2              }
 428   1              
 429   1              return bitstatus;
 430   1      }
 431          
 432          /*****************************************************
 433          *函数名称：void USCI1_ClearFlag(USCI1_Flag_TypeDef USCI1_FLAG)
 434          *函数功能：清除USCI1标志状态
 435          *入口参数：USCI1_FLAG           所需清除的标志位
 436          *出口参数：void 
 437          *****************************************************/
 438          void USCI1_ClearFlag(USCI1_Flag_TypeDef USCI1_FLAG)
 439          {
 440   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)  
                      if((USCI1_FLAG==USCI1_SPI_FLAG_SPIF) || (USCI1_FLAG==USCI1_SPI_FLAG_WCOL))
                      #endif
 443   1              #if defined (SC95F8x2x) || defined (SC95F7x2x)  
 444   1              if((USCI1_FLAG==USCI1_SPI_FLAG_SPIF) || (USCI1_FLAG==USCI1_SPI_FLAG_WCOL) || (USCI1_FLAG==USCI1_SPI_FLAG_
             -TXE))
 445   1              #endif
 446   1              {
 447   2                      US1CON1 &= (~USCI1_FLAG);
 448   2              }
 449   1              else
 450   1              {
 451   2                      US1CON0 &= (~USCI1_FLAG);
 452   2              }
 453   1      }
 454          
 455          #if defined (SC95F8x2x) || defined (SC95F7x2x)  
 456          /*********************************************************************************************************
             -*
 457          *函数名称：uint8_t USCI1_SPI_WriteFIFO(uint16_t *sbuf,uint8_t length)
 458          *函数功能：SPI1写入FIFO
 459          *入口参数：uint16_t *sbuf,uint8_t length(发送buffer，数据长度)
 460          *出口参数：uint8_t(0:非法操作；1:写入FIFO缓存成功)
 461          **********************************************************************************************************
             -/
 462          uint8_t USCI1_SPI_WriteFIFO(uint16_t *sbuf,uint8_t length)
 463          {
 464   1              if(length > 8 || length < 1)  
 465   1              {
 466   2                      return 0;
 467   2              }
 468   1              else
 469   1              {
 470   2                      uint8_t i=0;
 471   2                      US1CON1 &= ~0x01;                       //关闭TBIE
 472   2                      for(i=0;i<length;i++) 
 473   2                      {
 474   3                              US1CON3 = *(sbuf+i)>>8; //写入待发送数据的高字节
 475   3                              US1CON2 = *(sbuf+i);            //写入待发送数据的低字节
 476   3                      }
C51 COMPILER V9.01   SC95F_USCI1                                                           09/07/2020 16:59:35 PAGE 9   

 477   2                      if(length != 0x01)                      //若非单次写入，需清除TXE
 478   2                      {
 479   3                              US1CON1 &= (~0x08);             //清TXE
 480   3                      }
 481   2                      US1CON1 |= 0x01;                        //开启TBIE
 482   2                      return 1;
 483   2              }
 484   1      }
 485          #endif
 486          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    553    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
