C51 COMPILER V9.01   SC95F_TIMER4                                                          09/07/2020 16:59:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_TIMER4
OBJECT MODULE PLACED IN ..\Output\sc95f_timer4.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_timer4.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib
                    -\inc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_timer4.lst) OBJECT(..\Output\sc95f_timer4.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : sc95f_timer4.c
   4          //      作者            : 
   5          //      模块功能        : TIMER4固件库函数C文件
   6          //      局部函数列表:
   7          //  最后更正日期: 2020/8/13
   8          //      版本            : V1.0 
   9          //  说明        ：该文件仅适用于SC95Fxx1x、SC95Fxx2x系列芯片  
  10          //*************************************************************
  11          
  12          #include "sc95f_timer4.h"
  13          
  14          /**************************************************
  15          *函数名称：void TIM4_DeInit(void)
  16          *函数功能：TIMER4相关寄存器复位至缺省值
  17          *入口参数：TIM4_TimerSelect  TIMER4寄存器组指向TIMER4
  18          *出口参数：void
  19          **************************************************/
  20          void TIM4_DeInit()
  21          {
  22   1              TXINX = 0x04;    //TIMER4 选择
  23   1              TXCON = 0X00;
  24   1              TXMOD = 0X00;
  25   1              RCAPXH = 0X00;
  26   1              RCAPXL = 0X00;
  27   1              THX = 0X00;
  28   1              TLX = 0X00;
  29   1              IE1 &= 0X3F;
  30   1              IP1 &= 0X3F;
  31   1              ET2 = 0;
  32   1              IPT2 = 0;
  33   1      }
  34          
  35          /**************************************************
  36          *函数名称：void TIM4_PrescalerSelection(TIM4_PresSel_TypeDef TIM4_PrescalerSelection)
  37          *函数功能：TIMER4 预分频选择
  38          *入口参数：TIM2_PrescalerSelection      预分频选择
  39          *出口参数：void
  40          **************************************************/
  41          void TIM4_PrescalerSelection(TIM4_PresSel_TypeDef TIM4_PrescalerSelection)
  42          {
  43   1              TXINX = 0x04;
  44   1              if(TIM4_PrescalerSelection == TIM4_PRESSEL_FSYS_D12)
  45   1              {
  46   2                      TXMOD &= 0X7F;
  47   2              }
  48   1              else if(TIM4_PrescalerSelection == TIM4_PRESSEL_FSYS_D1)
  49   1              {
  50   2                      TXMOD |= 0X80;
  51   2              }       
  52   1      }
  53          
  54          /**************************************************
C51 COMPILER V9.01   SC95F_TIMER4                                                          09/07/2020 16:59:34 PAGE 2   

  55          *函数名称：void TIM4_WorkMode1Config(uint16_t TIM4_SetCounter)
  56          *函数功能：TIMER4工作模式1配置函数
  57          *入口参数：uint16_t TIM4_SetCounter     配置计数初值
  58          *出口参数：void
  59          **************************************************/
  60          void TIM4_WorkMode1Config(uint16_t TIM4_SetCounter)
  61          {       
  62   1              TXINX = 0x04;
  63   1              RCAPXL = TIM4_SetCounter % 256;
  64   1              RCAPXH = TIM4_SetCounter / 256;
  65   1      
  66   1              TLX = RCAPXL;
  67   1              THX = RCAPXH;
  68   1      }
  69          /*****************************************************
  70          *函数名称：void TIM4_Cmd(FunctionalState NewState)
  71          *函数功能：TIMER4功能开关函数
  72          *入口参数：FunctionalState NewState     功能启动/关闭选择
  73          *出口参数：void
  74          *****************************************************/
  75          void TIM4_Cmd(FunctionalState NewState)
  76          {
  77   1              TXINX = 0x04;
  78   1              if (NewState == DISABLE)
  79   1          {
  80   2             TRX = 0;
  81   2          }
  82   1          else
  83   1          {
  84   2             TRX = 1;
  85   2          }
  86   1      }
  87          /*****************************************************
  88          *函数名称：void TIMX_ITConfig(FunctionalState NewState, PriorityStatus Priority)
  89          *函数功能：TIMER4中断初始化
  90          *入口参数：NewState     中断使能/关闭选择
  91                             Priority     中断优先级选择
  92          *出口参数：void
  93          *****************************************************/
  94          void TIM4_ITConfig(FunctionalState NewState, PriorityStatus Priority)
  95          {
  96   1              TXINX = 0x04;
  97   1              if(NewState == DISABLE)
  98   1              {
  99   2                      IE1 &= 0X7F;
 100   2              }
 101   1              else
 102   1              {
 103   2                      IE1 |= 0X80;
 104   2              }
 105   1              if(Priority == LOW)
 106   1              {
 107   2                      IP1 &= 0X7F;
 108   2              }
 109   1              else
 110   1              {
 111   2                      IP1 |= 0X80;
 112   2              }
 113   1      
 114   1      }
 115          
 116          /*****************************************************
C51 COMPILER V9.01   SC95F_TIMER4                                                          09/07/2020 16:59:34 PAGE 3   

 117          *函数名称：FlagStatus TIM4_GetFlagStatus(TIM4_Flag_TypeDef TIM4_Flag)
 118          *函数功能：获得TIMER4中断标志状态
 119          *入口参数：TIM4_Flag            TIMER4标志选择
 120          *出口参数：FlagStatus       TIMER4中断标志状态  
 121          *****************************************************/
 122          FlagStatus TIM4_GetFlagStatus(TIM4_Flag_TypeDef TIM4_Flag)
 123          {       
 124   1              FlagStatus status = RESET;
 125   1              TXINX = 0x04;
 126   1              if((TIM4_Flag & TXCON) != (uint8_t)RESET)
 127   1              {
 128   2                      status = SET;                   
 129   2              }
 130   1              else
 131   1              {
 132   2                      status = RESET; 
 133   2              }
 134   1              return status;  
 135   1      }
 136          
 137          /*****************************************************
 138          *函数名称：void TIM4_ClearFlag(TIM4_Flag_TypeDef TIM4_Flag)
 139          *函数功能：清除TIMER4中断标志状态
 140          *入口参数：TIM4_Flag            TIMER4标志选择
 141          *出口参数：void 
 142          *****************************************************/
 143          void TIM4_ClearFlag(TIM4_Flag_TypeDef TIM4_Flag)
 144          {
 145   1              TXINX = 0x04;
 146   1              TXCON &= (~TIM4_Flag);
 147   1      }
 148          
 149          #if defined (SC95F8x2x) || defined (SC95F7x2x)  
 150          /**************************************************
 151          *函数名称：void TIM4_TimeBaseInit(TIM4_CountMode_TypeDef TIM4_CountMode, TIM4_CountDirection_TypeDef TIM4_
             -CountDirection)
 152          *函数功能：TIM4基本设置配置函数
 153          *入口参数：
 154                             TIM4_CountMode                       计数/定时模式选择
 155                             TIM4_CountDirection          计数方向选择
 156          *出口参数：void
 157          **************************************************/
 158          void TIM4_TimeBaseInit(TIM4_CountMode_TypeDef TIM4_CountMode, TIM4_CountDirection_TypeDef TIM4_CountDirect
             -ion)
 159          {       
 160   1              TXINX = 0x04;
 161   1              if(TIM4_CountMode == TIM4_MODE_TIMER)
 162   1              {
 163   2                      TXCON &= 0XFD;
 164   2              }
 165   1              else if(TIM4_CountMode == TIM4_MODE_COUNTER)
 166   1              {
 167   2                      TXCON |= 0X02;
 168   2              }
 169   1      /************************************************************/
 170   1              if(TIM4_CountDirection == TIM4_COUNTDIRECTION_UP)
 171   1              {
 172   2                      TXMOD &= 0XFE;
 173   2              }
 174   1              else if(TIM4_CountDirection == TIM4_COUNTDIRECTION_DOWN_UP)
 175   1              {
 176   2                      TXMOD |= 0X01;
C51 COMPILER V9.01   SC95F_TIMER4                                                          09/07/2020 16:59:34 PAGE 4   

 177   2              }                       
 178   1      }
 179          
 180          /**************************************************
 181          *函数名称：void TIM4_WorkMode0Config(uint16_t TIM4_SetCounter)
 182          *函数功能：TIMER4工作模式0配置函数
 183          *入口参数：uint16_t TIM4_SetCounter     配置计数初值
 184          *出口参数：void
 185          **************************************************/
 186          void TIM4_WorkMode0Config(uint16_t TIM4_SetCounter)
 187          {
 188   1              TXINX = 0x04;
 189   1      
 190   1              TLX = TIM4_SetCounter % 256;
 191   1              THX = TIM4_SetCounter / 256;    
 192   1      }
 193          
 194          /**************************************************
 195          *函数名称：void TIM4_WorkMode3Config(uint16_t TIM4_SetCounter)
 196          *函数功能：TIMER2工作模式3配置函数
 197          *入口参数：uint16_t TIM2_SetCounter             配置计数初值
 198          *出口参数：void
 199          **************************************************/
 200          void TIM4_WorkMode3Config(uint16_t TIM4_SetCounter)
 201          {
 202   1              TXINX = 0x04;
 203   1              RCAPXL = TIM4_SetCounter % 256;
 204   1              RCAPXH = TIM4_SetCounter / 256;
 205   1              TXMOD |= 0X02;                  
 206   1      }
 207          /**************************************************
 208          *函数名称：void TIM4_WorkModeConfig(TIM4_WorkMode_TypeDef TIM4_WorkMode, uint16_t TIM4_SetCounter)
 209          *函数功能：TIMER4工作模式配置函数
 210          *入口参数：TIM4_WorkMode_TypeDef TIM4_WorkMode  TIMER2工作模式选择
 211                             uint16_t TIM4_SetCounter                     TIMER2计数初值配置      
 212          *出口参数：void
 213          **************************************************/
 214          void TIM4_WorkModeConfig(TIM4_WorkMode_TypeDef TIM4_WorkMode, uint16_t TIM4_SetCounter)
 215          {       
 216   1              switch (TIM4_WorkMode)
 217   1              {
 218   2                      case TIM4_WORK_MODE0:
 219   2                              TIM4_WorkMode0Config(TIM4_SetCounter);
 220   2                      break;
 221   2      
 222   2                      case TIM4_WORK_MODE1:
 223   2                              TIM4_WorkMode1Config(TIM4_SetCounter);
 224   2                      break;
 225   2      
 226   2                      case TIM4_WORK_MODE3:
 227   2                              TIM4_WorkMode3Config(TIM4_SetCounter);
 228   2                      break;
 229   2      
 230   2                      default:
 231   2                      break;
 232   2              }               
 233   1      }
 234          /*****************************************************
 235          *函数名称：void TIM4_SetEXEN4(FunctionalState NewState)
 236          *函数功能：TIMER4_EXEN4配置函数
 237          *入口参数：FunctionalState NewState             EXEN4使能选择
 238          *出口参数：void
C51 COMPILER V9.01   SC95F_TIMER4                                                          09/07/2020 16:59:34 PAGE 5   

 239          *****************************************************/
 240          void TIM4_SetEXEN4(FunctionalState NewState)
 241          {
 242   1              TXINX = 0x04;
 243   1              if (NewState == DISABLE)
 244   1          {
 245   2             EXENX = 0;
 246   2          }
 247   1          else
 248   1          {
 249   2             EXENX = 1;
 250   2          }
 251   1      }
 252          
 253          #endif
 254          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    223    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
