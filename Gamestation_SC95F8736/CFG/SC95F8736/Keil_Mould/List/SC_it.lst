C51 COMPILER V9.00   SC_IT                                                                 07/01/2021 08:32:27 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SC_IT
OBJECT MODULE PLACED IN ..\Output\SC_it.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\User\SC_it.c LARGE OMF2 BROWSE INCDIR(..\FWLib\SC95F
                    -_Lib\inc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\SC_it.lst) OBJECT(..\Output\SC_it.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : SC_it.c
   4          //      模块功能        : 中断服务程序
   5          //  说明        :  
   6          //*************************************************************
   7          /********************Includes************************************************************************/
   8          #include "SC_it.h"
   9          #include "..\Drivers\SCDriver_list.h"
  10          #include "HeadFiles\SC_itExtern.h"
  11          /*<define>*//*<UserCodeStart>*/
  12          /*<UserCodeEnd>*/
  13          
  14          /*********<GlobalVariables>**************************************************************************/                  
  15          /*********<GlobalVariablesAnnounceBegin>**************************************/
  16          /*********<GlobalVariablesAnnounceEnd>****************************************/
  17          
  18          /*********<GlobalFunctions>**************************************************************************/                  
  19          /*********<GlobalFunctionsAnnounceBegin>**************************************/
  20          /*********<GlobalFunctionsAnnounceEnd>****************************************/
  21          
  22          /****************Pragma directive********************************************************************/
  23          
  24          /*********<GlobalVariables>**************************************************************************/                  
  25          /*********<GlobalVariablesDefineBegin>**************************************/
  26          /*********<GlobalVariablesDefineEnd>****************************************/
  27          
  28          
  29          /*********<GlobalFunctions>**************************************************************************/                  
  30          /*********<GlobalFunctionsDefineBegin>**************************************/
  31          /*********<GlobalFunctionsDefineEnd>****************************************/
  32          /*********<GlobalFunctionsRealizeBegin>**************************************/
  33          /*********<GlobalFunctionsRealizeEnd>****************************************/
  34          
  35          
  36          
  37          void INT0Interrupt()            interrupt 0                             
  38          {
  39   1              /*<UserCodeStart>*/
  40   1              /*<UserCodeEnd>*/
  41   1              TCON &= 0XFD;//清中断标志位             
  42   1              /*INT0_it write here*/
  43   1      
  44   1                      
  45   1      }
  46          
  47          void Timer0Interrupt()          interrupt 1                        
  48          {
  49   1              /*<UserCodeStart>*/
  50   1              /*<UserCodeEnd>*/
  51   1              /*TIM0_it write here*/          
  52   1      }
  53          
  54          void INT1Interrupt()            interrupt 2             
C51 COMPILER V9.00   SC_IT                                                                 07/01/2021 08:32:27 PAGE 2   

  55          {
  56   1              /*<UserCodeStart>*/
  57   1              /*<UserCodeEnd>*/
  58   1              TCON &= 0XF7;//清中断标志位
  59   1              /*INT1_it write here*/                                  
  60   1      }
  61          
  62          void Timer1Interrupt()          interrupt 3             
  63          {
  64   1              /*<UserCodeStart>*/
  65   1              /*<UserCodeEnd>*/       
  66   1              /*TIM1_it write here*/          
  67   1      }
  68          
  69          void UART0Interrupt()           interrupt 4             
  70          {
  71   1              /*<UserCodeStart>*/
  72   1              /*<UserCodeEnd>*/       
  73   1              /*UART0_it write here*/         
  74   1      }
  75          
  76          void Timer2Interrupt()          interrupt 5             
  77          {
  78   1              /*<UserCodeStart>*/
  79   1              /*<UserCodeEnd>*/       
  80   1              /*TIM2_it write here*/          
  81   1      }
  82          
  83          void ADCInterrupt()                     interrupt 6             
  84          {
  85   1              /*<UserCodeStart>*/
  86   1              /*<UserCodeEnd>*/       
  87   1              /*ADC_it write here*/           
  88   1      }
  89          
  90          void USCI0Interrupt()                   interrupt 7             
  91          {
  92   1              /*<UserCodeStart>*/
  93   1              /*<UserCodeEnd>*/       
  94   1              /*USCI0_it write here*/         
  95   1      }
  96          
  97          void PWMInterrupt()                     interrupt 8
  98          {
  99   1              /*<UserCodeStart>*/
 100   1        /*<UserCodeEnd>*/     
 101   1              /*PWM_it write here*/           
 102   1      }
 103          
 104          #if !defined (TK_USE_BTM)
 105          void BTMInterrupt()                     interrupt 9
 106          {
 107   1              /*<UserCodeStart>*/
 108   1              /*<UserCodeEnd>*/       
 109   1              /*BTM_it write here*/           
 110   1      }
 111          #endif
 112          
 113          void INT2Interrupt()            interrupt 10
 114          {
 115   1              /*<UserCodeStart>*/
 116   1              /*<UserCodeEnd>*/       
C51 COMPILER V9.00   SC_IT                                                                 07/01/2021 08:32:27 PAGE 3   

 117   1              /*INT2_it write here*/          
 118   1      }
 119          
 120          void ACMPInterrupt()            interrupt 12
 121          {
 122   1              /*<UserCodeStart>*/
 123   1              /*<UserCodeEnd>*/       
 124   1              /*ACMP_it write here*/          
 125   1      }
 126          void Timer3Interrupt()          interrupt 13
 127          {
 128   1              /*<UserCodeStart>*/
 129   1              /*<UserCodeEnd>*/       
 130   1              /*Timer3_it write here*/                
 131   1      }
 132          void Timer4Interrupt()          interrupt 14
 133          {
 134   1              /*<UserCodeStart>*/
 135   1              /*<UserCodeEnd>*/       
 136   1              /*Timer4_it write here*/                
 137   1      }
 138          void USCI1Interrupt()           interrupt 15            
 139          {
 140   1              /*<UserCodeStart>*/
 141   1              /*<UserCodeEnd>*/       
 142   1              /*USCI1_it write here*/         
 143   1      }
 144          void USCI2Interrupt()           interrupt 16            
 145          {
 146   1              /*<UserCodeStart>*/
 147   1              /*<UserCodeEnd>*/       
 148   1              /*USCI2_it write here*/         
 149   1      }
 150          void USCI3Interrupt()           interrupt 17            
 151          {
 152   1              /*<UserCodeStart>*/
 153   1              /*<UserCodeEnd>*/       
 154   1              /*USCI3_it write here*/         
 155   1      }
 156          void USCI4Interrupt()           interrupt 18            
 157          {
 158   1              /*<UserCodeStart>*/
 159   1              /*<UserCodeEnd>*/       
 160   1              /*USCI4_it write here*/         
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
