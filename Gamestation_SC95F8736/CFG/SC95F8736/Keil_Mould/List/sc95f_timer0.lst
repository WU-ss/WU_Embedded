C51 COMPILER V9.01   SC95F_TIMER0                                                          09/07/2020 16:59:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_TIMER0
OBJECT MODULE PLACED IN ..\Output\sc95f_timer0.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_timer0.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib
                    -\inc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_timer0.lst) OBJECT(..\Output\sc95f_timer0.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : sc95f_timer0.c
   4          //      作者            : 
   5          //      模块功能        : TIMER0固件库函数C文件
   6          //      局部函数列表:
   7          //  最后更正日期: 2020/8/13
   8          //      版本            : V1.0 
   9          //  说明        ：该文件仅适用于SC95Fxx1x、SC95Fxx2x系列芯片  
  10          //*************************************************************
  11          
  12          #include "sc95f_timer0.h"
  13          
  14          /**************************************************
  15          *函数名称：void TIM0_DeInit(void)
  16          *函数功能：TIMER0相关寄存器复位至缺省值
  17          *入口参数：void
  18          *出口参数：void
  19          **************************************************/
  20          void TIM0_DeInit(void)
  21          {
  22   1              TMOD &= 0XF0;
  23   1              TCON &= 0XCD;
  24   1              TMCON &=0XFE;
  25   1              TH0 = 0X00;
  26   1              TL0 = 0X00;
  27   1              ET0 = 0;
  28   1              IPT0 = 0;
  29   1      }
  30          
  31          /**************************************************
  32          *函数名称：void TIM0_TimeBaseInit(TIM0_PresSel_TypeDef TIM0_PrescalerSelection, TIM0_CountMode_TypeDef TIM
             -0_CountMode)
  33          *函数功能：TIMER0基本设置配置函数
  34          *入口参数：TIM0_PrescalerSelection      预分频选择
  35                             TIM0_CountMode                       计数/定时模式选择
  36          *出口参数：void
  37          **************************************************/             
  38          void TIM0_TimeBaseInit(TIM0_PresSel_TypeDef TIM0_PrescalerSelection,TIM0_CountMode_TypeDef TIM0_CountMode)
  39          {
  40   1              if(TIM0_PrescalerSelection == TIM0_PRESSEL_FSYS_D12)
  41   1              {
  42   2                      TMCON &= 0XFE;
  43   2              }
  44   1              else if(TIM0_PrescalerSelection == TIM0_PRESSEL_FSYS_D1)
  45   1              {
  46   2                      TMCON |= 0X01;
  47   2              }
  48   1      /************************************************************/
  49   1              if(TIM0_CountMode == TIM0_MODE_TIMER)
  50   1              {
  51   2                      TMOD &= 0xFB;           
  52   2              }
  53   1              else if(TIM0_CountMode == TIM0_MODE_COUNTER)
C51 COMPILER V9.01   SC95F_TIMER0                                                          09/07/2020 16:59:33 PAGE 2   

  54   1              {
  55   2                      TMOD |= 0x04;
  56   2              }       
  57   1      }
  58          
  59          /**************************************************
  60          *函数名称：void TIM0_WorkMode0Config(uint16_t TIM0_SetCounter)
  61          *函数功能：TIMER0工作模式0配置函数
  62          *入口参数：uint16_t TIM0_SetCounter     配置计数初值
  63          *出口参数：void
  64          **************************************************/
  65          void TIM0_WorkMode0Config(uint16_t TIM0_SetCounter)
  66          {
  67   1              TMOD &= 0XFC;
  68   1              TL0 = (uint8_t)TIM0_SetCounter;
  69   1              TH0 = (TIM0_SetCounter >> 5);           
  70   1      }
  71          
  72          /**************************************************
  73          *函数名称：void TIM0_WorkMode1Config(uint16_t TIM0_SetCounter)
  74          *函数功能：TIMER0工作模式1配置函数
  75          *入口参数：uint16_t TIM0_SetCounter     配置计数初值
  76          *出口参数：void
  77          **************************************************/
  78          void TIM0_WorkMode1Config(uint16_t TIM0_SetCounter)
  79          {
  80   1              TMOD &= 0XFC;
  81   1              TMOD |= 0X01;
  82   1              TL0 = TIM0_SetCounter % 256;
  83   1              TH0 = TIM0_SetCounter / 256;
  84   1      }
  85          
  86          /**************************************************
  87          *函数名称：void TIM0_WorkMode2Config(uint8_t TIM0_SetCounter)
  88          *函数功能：TIMER0工作模式2配置函数
  89          *入口参数：uint8_t TIM0_SetCounter      配置计数初值
  90          *出口参数：void
  91          **************************************************/
  92          void TIM0_WorkMode2Config(uint8_t TIM0_SetCounter)
  93          {
  94   1              TMOD &= 0XFC;
  95   1              TMOD |= 0X02;
  96   1              TL0 = TIM0_SetCounter;
  97   1              TH0 = TIM0_SetCounter;
  98   1      }
  99          
 100          /**************************************************
 101          *函数名称：void TIM0_WorkModeConfig(TIM0_WorkMode_TypeDef TIM0_WorkMode, uint16_t TIM0_SetCounter1, uint16
             -_t TIM0_SetCounter2)
 102          *函数功能：TIMER0工作模式配置函数
 103          *入口参数：TIM0_WorkMode_TypeDef TIM0_WorkMode  TIMER0工作模式选择
 104                             uint16_t TIM0_SetCounter1            TIMER0计数初值配置1     
 105                             uint16_t TIM0_SetCounter2            TIMER0计数初值配置2
 106          *出口参数：void
 107          **************************************************/
 108          void TIM0_WorkModeConfig(TIM0_WorkMode_TypeDef TIM0_WorkMode, uint16_t TIM0_SetCounter1, uint16_t TIM0_Set
             -Counter2)
 109          {       
 110   1              switch (TIM0_WorkMode)
 111   1              {
 112   2                      case TIM0_WORK_MODE0:
 113   2                              TIM0_WorkMode0Config(TIM0_SetCounter1);
C51 COMPILER V9.01   SC95F_TIMER0                                                          09/07/2020 16:59:33 PAGE 3   

 114   2                      break;
 115   2      
 116   2                      case TIM0_WORK_MODE1:
 117   2                              TIM0_WorkMode1Config(TIM0_SetCounter1);
 118   2                      break;
 119   2      
 120   2                      case TIM0_WORK_MODE2:
 121   2                              TIM0_WorkMode2Config(TIM0_SetCounter1);
 122   2                      break;
 123   2      
 124   2                      case TIM0_WORK_MODE3:
 125   2                              TIM0_WorkMode3Config(TIM0_SetCounter1, TIM0_SetCounter2);
 126   2                      break;
 127   2      
 128   2                      default:
 129   2                      break;
 130   2              }               
 131   1      }
 132          
 133          /**************************************************
 134          *函数名称：void TIM0_WorkMode3Config(uint8_t TIM0_SetCounter, uint8_t TIM1_SetCounter)
 135          *函数功能：TIMER0工作模式3配置函数
 136          *入口参数：uint8_t TIM0_SetCounter      配置TIMER0_TL0计数初值  
 137                             uint8_t TIM1_SetCounter      配置TIMER0_TH0计数初值
 138          *出口参数：void
 139          **************************************************/
 140          void TIM0_WorkMode3Config(uint8_t TIM0_SetCounter, uint8_t TIM1_SetCounter)
 141          {
 142   1              TMOD |= 0X03;
 143   1              TL0 = TIM0_SetCounter;
 144   1              TH0 = TIM1_SetCounter;          
 145   1      }
 146          
 147          /**************************************************
 148          *函数名称：void TIM0_Mode0SetReloadCounter(uint16_t TIM0_SetCounter)
 149          *函数功能：TIMER0工作模式0初值重载函数
 150          *入口参数：uint16_t TIM0_SetCounter     配置TIMER0重载值        
 151          *出口参数：void
 152          **************************************************/
 153          void TIM0_Mode0SetReloadCounter(uint16_t TIM0_SetCounter)
 154          {
 155   1              TL0 = (uint8_t)TIM0_SetCounter;
 156   1              TH0 = (TIM0_SetCounter >> 5);   
 157   1      }
 158          
 159          /**************************************************
 160          *函数名称：void TIM0_Mode1SetReloadCounter(uint16_t TIM0_SetCounter)
 161          *函数功能：TIMER0工作模式1初值重载函数
 162          *入口参数：uint16_t TIM0_SetCounter     配置TIMER0重载值        
 163          *出口参数：void
 164          **************************************************/
 165          void TIM0_Mode1SetReloadCounter(uint16_t TIM0_SetCounter)
 166          {
 167   1              TL0 = TIM0_SetCounter % 256;
 168   1              TH0 = TIM0_SetCounter / 256;    
 169   1      }
 170          
 171          /*****************************************************
 172          *函数名称：void TIM0_Cmd(FunctionalState NewState)
 173          *函数功能：TIMER0功能开关函数
 174          *入口参数：FunctionalState NewState     功能启动/关闭选择
 175          *出口参数：void
C51 COMPILER V9.01   SC95F_TIMER0                                                          09/07/2020 16:59:33 PAGE 4   

 176          *****************************************************/
 177          void TIM0_Cmd(FunctionalState NewState)
 178          {
 179   1              if (NewState == DISABLE)
 180   1          {
 181   2             TR0 = 0;
 182   2          }
 183   1          else
 184   1          {
 185   2             TR0 = 1;
 186   2          }
 187   1      }
 188          
 189          /**************************************************
 190          *函数名称：void TIM0_SetTL0Counter(uint8_t TIM0_SetCounter)
 191          *函数功能：TIMER0 TL0赋值函数
 192          *入口参数：uint8_t TIM0_SetCounter      配置TL0 
 193          *出口参数：void
 194          **************************************************/
 195          void TIM0_SetTL0Counter(uint8_t TIM0_SetCounter)
 196          {
 197   1              TL0 = TIM0_SetCounter;  
 198   1      }
 199          
 200          /**************************************************
 201          *函数名称：void TIM0_SetTH0Counter(uint8_t TIM0_SetCounter)
 202          *函数功能：TIMER0 TH0赋值函数
 203          *入口参数：uint8_t TIM0_SetCounter      配置TH0 
 204          *出口参数：void
 205          **************************************************/
 206          void TIM0_SetTH0Counter(uint8_t TIM0_SetCounter)
 207          {
 208   1              TH0 = TIM0_SetCounter;
 209   1      }
 210          
 211          /*****************************************************
 212          *函数名称：void TIM0_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 213          *函数功能：TIMER0中断初始化
 214          *入口参数：FunctionalState NewState     中断使能/关闭选择
 215                             PriorityStatus Priority      中断优先级选择
 216          *出口参数：void
 217          *****************************************************/
 218          void TIM0_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 219          {
 220   1          if(NewState == DISABLE)
 221   1          {
 222   2             ET0 = 0;
 223   2          }
 224   1          else
 225   1          {
 226   2             ET0 = 1;
 227   2          }
 228   1      /************************************************************/
 229   1              if(Priority == LOW)
 230   1              {
 231   2                      IPT0 = 0;
 232   2              }
 233   1              else
 234   1              {
 235   2                      IPT0 = 1;
 236   2              }
 237   1      }
C51 COMPILER V9.01   SC95F_TIMER0                                                          09/07/2020 16:59:33 PAGE 5   

 238          
 239          /*****************************************************
 240          *函数名称：FlagStatus TIM0_GetFlagStatus(void)
 241          *函数功能：获得TIMER0中断标志状态
 242          *入口参数：void
 243          *出口参数：FlagStatus   TIMER0中断标志状态      
 244          *****************************************************/
 245          FlagStatus TIM0_GetFlagStatus(void)
 246          {
 247   1              return TF0;
 248   1      }
 249          
 250          /*****************************************************
 251          *函数名称：void TIM0_ClearFlag(void)
 252          *函数功能：清除TIMER0中断标志状态
 253          *入口参数：void
 254          *出口参数：void 
 255          *****************************************************/
 256          void TIM0_ClearFlag(void)
 257          {
 258   1              TF0 = 0;
 259   1      }
 260          
 261          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    202    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
